{
	"info": {
		"_postman_id": "abd9aaa9-6a48-4def-907b-4f121b8dfd46",
		"name": "SUV",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Voucher Model",
			"item": [
				{
					"name": "Voucher Confirmations",
					"item": [
						{
							"name": "Provision request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dd8631d6-bc19-4793-81b0-265fd5aabcf3",
										"exec": [
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var thirdPartyIds = jsonData.thirdPartyIdentifiers",
											"postman.setEnvironmentVariable(\"thirdPartyId1\", thirdPartyIds[0].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef1\", thirdPartyIds[0].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId2\", thirdPartyIds[1].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef2\", thirdPartyIds[1].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId3\", thirdPartyIds[2].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef3\", thirdPartyIds[2].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId4\", thirdPartyIds[3].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef4\", thirdPartyIds[3].transactionIdentifier);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b6f268de-acbb-48e5-8056-339bc385e153",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
											"",
											"var dateTime = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", dateTime);",
											"postman.setEnvironmentVariable(\"requestTime\", dateTime);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers"
									]
								},
								"description": "Voucher provision request"
							},
							"response": []
						},
						{
							"name": "Confirmation of prior voucher",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77f36893-f14c-4241-a259-a0f076447f5c",
										"exec": [
											"tests[\"Status code is 202\"] = responseCode.code === 202;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Confirmation ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"confirmationId\");",
											"tests[\"Request ID returned\"] = jsonData.requestId === postman.getEnvironmentVariable(\"requestId\");",
											"tests[\"Time returned\"] = jsonData.time === postman.getEnvironmentVariable(\"timestamp\");",
											"tests[\"Third party identifiers\"] = jsonData.id !== null;"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var voidId = uuid();",
											"postman.setEnvironmentVariable(\"confirmationId\", voidId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"tenders\": [\n    \t{\n    \t\"amount\":{\n    \t\t\"amount\":1000,\n    \t\t\"currency\":710\n    \t},\n    \t\"tenderType\":\"CASH\"\n    \t}]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/confirmations",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										"confirmations"
									]
								},
								"description": "Voucher confirmation advice"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Voucher Error responses",
					"item": [
						{
							"name": "1.Username Client.Id mismatch",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9121583c-8af2-4716-bff3-20c49c0e7967",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is AUTHENTICATION_ERROR\"] = jsonData.errorType === \"AUTHENTICATION_ERROR\";",
											"tests[\"No original ID returned\"] = (\"originalId\" in jsonData) === false;",
											"tests[\"Request ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"requestId\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "beb0c2a8-2d22-410f-85aa-54dee53c3cd4",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
											"",
											"var dateTime = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", dateTime);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "wrongUsername",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic d3JvbmdVc2VybmFtZTpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers"
									]
								},
								"description": "Voucher provision request which mismatched HTTP Basic Auth username and Client.Id"
							},
							"response": []
						},
						{
							"name": "1.Reversal of non-provisioned voucher",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3c186c4a-7f26-41e7-a394-058dd8f922ad",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"var errorDetail = JSON.parse(responseBody);",
											"tests[\"Error type is UNABLE_TO_LOCATE_RECORD\"] = errorDetail.errorType === \"UNABLE_TO_LOCATE_RECORD\";",
											"tests[\"Request ID returned\"] = errorDetail.originalId === postman.getEnvironmentVariable(\"requestId\");",
											"tests[\"Reversal ID returned\"] = errorDetail.id === postman.getEnvironmentVariable(\"reversalId\");",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "30a73a55-472e-4583-8131-32f5227b6f0e",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"var reversalId = uuid();",
											"postman.setEnvironmentVariable(\"reversalId\", reversalId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
											"",
											"var dateTime = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", dateTime);",
											"postman.setEnvironmentVariable(\"requestTime\", dateTime);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{reversalId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"reversalReason\": \"TIMEOUT\"\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/reversals",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										"reversals"
									]
								},
								"description": "Voucher reversal advice for a provision which was never processed by the vendor."
							},
							"response": []
						},
						{
							"name": "1.Provision request after provision reversal",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "01117d1e-7d61-48d1-9a18-c52b0a87b78a",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is VOUCHER_ALREADY_REVERSED\"] = jsonData.errorType === \"VOUCHER_ALREADY_REVERSED\";",
											"tests[\"Request ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"requestId\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6419af92-0c3a-46da-95c2-77c19643100e",
										"exec": [
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										""
									]
								},
								"description": "Voucher provision request"
							},
							"response": []
						},
						{
							"name": "1.Confirmation of non-provisioned voucher",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7e33eff3-942a-4cf4-ad3b-6df1146c24d5",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"var errorDetail = JSON.parse(responseBody);",
											"tests[\"Error type is UNABLE_TO_LOCATE_RECORD\"] = errorDetail.errorType === \"UNABLE_TO_LOCATE_RECORD\";",
											"tests[\"Request ID returned\"] = errorDetail.originalId === postman.getEnvironmentVariable(\"requestId\");",
											"tests[\"Confirmation ID returned\"] = errorDetail.id === postman.getEnvironmentVariable(\"confirmationId\");",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "61210396-abc2-4ca7-b565-fcfd8cf762dd",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"var confirmationId = uuid();",
											"postman.setEnvironmentVariable(\"confirmationId\", confirmationId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
											"",
											"var dateTime = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", dateTime);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/confirmations/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										"confirmations",
										""
									]
								},
								"description": "Failed attempt to confirm a voucher which wasn't provisioned."
							},
							"response": []
						},
						{
							"name": "2.Provision request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "01117d1e-7d61-48d1-9a18-c52b0a87b78a",
										"exec": [
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var thirdPartyIds = jsonData.thirdPartyIdentifiers",
											"postman.setEnvironmentVariable(\"thirdPartyId1\", thirdPartyIds[0].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef1\", thirdPartyIds[0].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId2\", thirdPartyIds[1].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef2\", thirdPartyIds[1].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId3\", thirdPartyIds[2].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef3\", thirdPartyIds[2].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId4\", thirdPartyIds[3].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef4\", thirdPartyIds[3].transactionIdentifier);",
											"",
											"var voucher = jsonData.voucher;",
											"postman.setEnvironmentVariable(\"serialNum\", voucher.serialNumber);",
											"postman.setEnvironmentVariable(\"batchNum\", voucher.batchNumber);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6419af92-0c3a-46da-95c2-77c19643100e",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
											"",
											"var dateTime = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", dateTime);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										""
									]
								},
								"description": "Voucher provision request"
							},
							"response": []
						},
						{
							"name": "2.Confirmation of prior voucher",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c93db0c8-61fa-4808-af37-add07d64e40b",
										"exec": [
											"tests[\"Status code is 202\"] = responseCode.code === 202;"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "75a04a3c-0867-4523-8763-13e82da99b57",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var confirmationId = uuid();",
											"postman.setEnvironmentVariable(\"confirmationId\", confirmationId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/confirmations",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										"confirmations"
									]
								},
								"description": "Voucher confirmation advice"
							},
							"response": []
						},
						{
							"name": "2.Reversal of confirmed voucher",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d0af37ac-11bb-4543-af64-7f652eb45710",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is VOUCHER_ALREADY_CONFIRMED\"] = jsonData.errorType === \"VOUCHER_ALREADY_CONFIRMED\";",
											"tests[\"Request ID returned\"] = jsonData.originalId === postman.getEnvironmentVariable(\"requestId\");",
											"tests[\"Reversal ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"reversalId\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "bf2eef2f-d30b-44fe-9b23-b5541d133d95",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var reversalId = uuid();",
											"postman.setEnvironmentVariable(\"reversalId\", reversalId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{reversalId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"reversalReason\": \"TIMEOUT\"\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/reversals/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										"reversals",
										""
									]
								},
								"description": "Failed attempt to reverse a voucher which has been confirmed."
							},
							"response": []
						},
						{
							"name": "3.Provision request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "15446aa1-4483-488e-8836-97fe8d7977a1",
										"exec": [
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var thirdPartyIds = jsonData.thirdPartyIdentifiers",
											"postman.setEnvironmentVariable(\"thirdPartyId1\", thirdPartyIds[0].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef1\", thirdPartyIds[0].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId2\", thirdPartyIds[1].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef2\", thirdPartyIds[1].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId3\", thirdPartyIds[2].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef3\", thirdPartyIds[2].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId4\", thirdPartyIds[3].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef4\", thirdPartyIds[3].transactionIdentifier);",
											"",
											"var voucher = jsonData.voucher;",
											"postman.setEnvironmentVariable(\"serialNum\", voucher.serialNumber);",
											"postman.setEnvironmentVariable(\"batchNum\", voucher.batchNumber);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "d762af91-4560-4f93-8692-451ff2b3cebc",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
											"",
											"var dateTime = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", dateTime);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										""
									]
								},
								"description": "Voucher provision request"
							},
							"response": []
						},
						{
							"name": "3.Reversal of prior voucher",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d608f101-aed5-4032-8a8f-d4fdb076f03b",
										"exec": [
											"tests[\"Status code is 202\"] = responseCode.code === 202;"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e110c4da-19cf-404e-99d2-f5f3d697877e",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var reversalId = uuid();",
											"postman.setEnvironmentVariable(\"reversalId\", reversalId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{reversalId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"reversalReason\": \"TIMEOUT\"\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/reversals/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										"reversals",
										""
									]
								},
								"description": "Voucher reversal"
							},
							"response": []
						},
						{
							"name": "3.Confirmation of reversed voucher",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "906dfc7a-473b-492a-85e2-70630320d586",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is VOUCHER_ALREADY_REVERSED\"] = jsonData.errorType === \"VOUCHER_ALREADY_REVERSED\";",
											"tests[\"Request ID returned\"] = jsonData.originalId === postman.getEnvironmentVariable(\"requestId\");",
											"tests[\"Confirmation ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"confirmationId\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e4fc04f7-26e0-49e2-bfe0-d74ebd9a7868",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var confirmationId = uuid();",
											"postman.setEnvironmentVariable(\"confirmationId\", confirmationId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/confirmations",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										"confirmations"
									]
								},
								"description": "Failed attempt to confirm a reversed voucher."
							},
							"response": []
						},
						{
							"name": "3.Duplicate provision request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2630cfab-c956-45c0-8705-c4c077f00e34",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is DUPLICATE_RECORD\"] = jsonData.errorType === \"DUPLICATE_RECORD\";",
											"tests[\"No original ID returned\"] = (\"originalId\" in jsonData) === false;",
											"tests[\"Request ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"requestId\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e3bc267c-7805-41fa-af7b-b34a5523b197",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"//don't update the UUID for this test",
											"//postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
											"",
											"var dateTime = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", dateTime);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers"
									]
								},
								"description": "Voucher provision request with a non-unique UUID"
							},
							"response": []
						},
						{
							"name": "3.Unexpected Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2630cfab-c956-45c0-8705-c4c077f00e34",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e3bc267c-7805-41fa-af7b-b34a5523b197",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"//don't update the UUID for this test",
											"//postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
											"",
											"var dateTime = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", dateTime);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"aabbcc\":\"ccbbaa\",\n\t\"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers"
									]
								},
								"description": "Voucher provision request with a non-unique UUID"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Voucher Missing field tests",
					"item": [
						{
							"name": "Bad UUID format",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dd8631d6-bc19-4793-81b0-265fd5aabcf3",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"UUID must conform to the format 8-4-4-4-12 hexadecimal values\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b6f268de-acbb-48e5-8056-339bc385e153",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
											"",
											"var dateTime = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", dateTime);",
											"postman.setEnvironmentVariable(\"requestTime\", dateTime);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"1\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers"
									]
								},
								"description": "Voucher provision request"
							},
							"response": []
						},
						{
							"name": "Missing voucher ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ae01840c-eacf-4559-a3c6-b0c16f71d3cc",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"id may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "df6938a2-1de9-43bf-b4d5-1ebecfb30027",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"time\":\"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing time",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f46b99a6-3cd7-4125-a52c-be8f80249b94",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"time may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a153629e-0349-4cc9-a942-707c3aaea316",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8e85bd24-f5e2-4182-884f-f2912bb4372c",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "07e98f24-6f29-4017-81c6-f5a00d5c7411",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.merchant",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "532bacbf-a351-464f-ac8c-f47efa85aae4",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "243250f5-ba10-436d-9bdd-908a848260da",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.merchant.merchantId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e7610ef0-7256-49a7-b82d-47309b10ec19",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant.merchantId may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0d107e75-4d7a-4edc-aa6a-2de2f63284e1",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.merchant.merchantName",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8f26317a-703b-4fe5-960e-2b7cb3f75c6d",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant.merchantName may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ad867204-bfe3-4849-a7f1-df959d6638e3",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\"\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing merchantName.name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7d86cda0-3a18-4b04-9660-57025727f05e",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant.merchantName.name may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0b4d47c9-4e07-460f-a8e9-22ac2a74193f",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing merchantName.city",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "392b1498-4935-46d9-a95d-b565c098cef0",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant.merchantName.city may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ca400dbf-dde1-45f0-bdee-ad2644a34b36",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing merchantName.region",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b163b054-b04d-415c-af1c-141f3108f630",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant.merchantName.region may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e127cd7b-4ca4-41e8-860a-1b295d8c8f35",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing merchantName.country",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5d0b1e64-ec66-4736-a770-63124891da77",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant.merchantName.country may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "485da880-3154-4c21-9149-1aae8bd5e6da",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.merchant.merchantType",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "17fa6f3c-e970-4e08-823f-e18f77c92c11",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant.merchantType may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6a183ddd-a570-4ea2-97ac-33c37fedb552",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.terminalId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a7ca689b-ed5f-4f5e-9eb3-f955eabac2a7",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.terminalId may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3edfa005-9fb6-49af-8eb1-341e1f1dacf7",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.institution",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6551c880-dabe-4712-a088-257845681acf",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.institution may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "c72875f3-56db-4561-b27d-00d530c2e7de",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\"\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.institution.id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ea5d1009-27fb-4205-8de3-445ff376e175",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.institution.id may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3a2c1b48-4da8-49f8-9aa5-1fd6fde94516",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.institution.name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "79164c93-9e6e-45a3-9301-030c7c04bad3",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.institution.name may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "68026678-3096-4e8b-a686-79f01c1775f4",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing client",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f83dcded-18fe-4d00-a5dd-627c41127714",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"client may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a5175f66-c2a8-4fb5-b3f8-1217372f81e9",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing client.id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "247db5a9-3667-45e2-a02e-8217456f7fa7",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"client.id may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "de4aa68c-6e0b-4794-b8d9-1f12462bd10f",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing client.name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3beb2324-d2e7-4659-8d4a-d1223ca66990",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"client.name may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e6e8e2f2-973a-4bd8-8f58-d93d815b3459",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing thirdPartyId.institutionId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3beb2324-d2e7-4659-8d4a-d1223ca66990",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg ===  \"thirdPartyIdentifiers[0].institutionId may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e6e8e2f2-973a-4bd8-8f58-d93d815b3459",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n        \n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing thirdPartyId.transactionIdentifier",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3beb2324-d2e7-4659-8d4a-d1223ca66990",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"thirdPartyIdentifiers[0].transactionIdentifier may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e6e8e2f2-973a-4bd8-8f58-d93d815b3459",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing reversal ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2232ccf9-99c5-411f-8abf-dbfc31a00359",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"id may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "f1bfd6bb-3ac9-4603-9b8f-fd0977d80ad0",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var reversalId = uuid();",
											"postman.setEnvironmentVariable(\"reversalId\", reversalId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"reversalReason\": \"TIMEOUT\"\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/reversals",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										"reversals"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing request ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ae4b1b48-8aa0-4414-b43c-b8ad1dfba99f",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"requestId may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0cbed0df-a5fd-4760-8ef1-68cb8662c916",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var reversalId = uuid();",
											"postman.setEnvironmentVariable(\"reversalId\", reversalId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{reversalId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"reversalReason\": \"TIMEOUT\"\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/reversals",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										"reversals"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing reversal time",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "437e9e49-34f2-496a-bd62-cc0c7bae229b",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"time may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "16bebee5-d288-4426-80f8-c7bdce63c1ef",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var reversalId = uuid();",
											"postman.setEnvironmentVariable(\"reversalId\", reversalId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{reversalId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"reversalReason\": \"TIMEOUT\"\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/reversals",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										"reversals"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing reversal reason",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f1a8531-2b30-4773-9b3b-b0ad1f7afc56",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"reversalReason may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "68e556a2-c3d6-4cad-bb71-c916e291576a",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var reversalId = uuid();",
											"postman.setEnvironmentVariable(\"reversalId\", reversalId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{reversalId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/reversals",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										"reversals"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing confirmation ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1c67e74e-08f7-4d80-a5dd-84db3dd7eecb",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"id may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e9e45d93-82bd-4659-95b7-11b064d3af3b",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var voidId = uuid();",
											"postman.setEnvironmentVariable(\"confirmationId\", voidId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/confirmations",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										"confirmations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing confirmation request ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "15606a94-81b1-45d9-abaa-a8881af5d05a",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"requestId may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b9d006af-ca0c-4e83-82b7-b77bddb8a7d8",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var voidId = uuid();",
											"postman.setEnvironmentVariable(\"confirmationId\", voidId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/confirmations",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										"confirmations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing confirmation time",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f97abe41-d957-4f92-a505-d64076f64d34",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"time may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "f8dac0d6-887a-4011-9878-24c479bae80b",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var voidId = uuid();",
											"postman.setEnvironmentVariable(\"confirmationId\", voidId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/confirmations",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										"confirmations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing tenders.tender.ledgeramount.currency",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "d3a5fa28-b3d0-4cde-9338-b57ef12c95b0",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var voidId = uuid();",
											"postman.setEnvironmentVariable(\"confirmationId\", voidId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "2986c197-dcbc-4b17-be00-8d5adbd6c57e",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"tenders[0].amount.currency may not be null\";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Auth",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ=",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"tenders\": [\n    \t{\n    \t\"amount\":{\n    \t\t\"amount\":1000\n    \t},\n    \t\"tenderType\":\"CASH\"\n    \t}]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/confirmations",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										"confirmations"
									]
								}
							},
							"response": []
						}
					],
					"description": "Messages intended to test that the server correctly identifies a missing field in a message to the server.",
					"_postman_isSubFolder": true
				},
				{
					"name": "Voucher Provisions",
					"item": [
						{
							"name": "Minimalist Provision request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d6075876-1928-4c82-bb48-1eeadf8635ae",
										"exec": [
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Voucher ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"requestId\");",
											"",
											"tests[\"TimeStamp format correct\"] = new Date(jsonData.time);",
											"",
											"var voucher = jsonData.voucher;",
											"tests[\"Voucher present\"] = voucher !== null;",
											"tests[\"Voucher code present\"] = voucher.code !== null;",
											"",
											"var originator = jsonData.originator;",
											"tests[\"Originator present\"] = originator !== null;",
											"tests[\"Originator Merchant present\"] = originator.merchant !== null;",
											"tests[\"Originator Institution present\"] = originator.institution !== null;",
											"tests[\"Originator terminal echoed\"] = originator.terminalId === postman.getEnvironmentVariable(\"termId\");",
											"",
											"var merchant = originator.merchant;",
											"tests[\"Merchant ID echoed\"] = merchant.merchantId === postman.getEnvironmentVariable(\"merchantId\");",
											"tests[\"Merchant type echoed\"] = merchant.merchantType === postman.getEnvironmentVariable(\"merchantType\");",
											"tests[\"Merchant name present\"] = merchant.merchantName !== null;",
											"",
											"var merchantName = merchant.merchantName;",
											"tests[\"Merchant Name echoed\"] = merchantName.name === postman.getEnvironmentVariable(\"merchantName\");",
											"tests[\"Merchant City echoed\"] = merchantName.city === postman.getEnvironmentVariable(\"merchantCity\");",
											"tests[\"Merchant Region echoed\"] = merchantName.region === postman.getEnvironmentVariable(\"merchantRegion\");",
											"tests[\"Merchant Country echoed\"] = merchantName.country === postman.getEnvironmentVariable(\"merchantCountry\");",
											"",
											"var originatorInst = originator.institution;",
											"tests[\"Originator institution present\"] = originatorInst !== null;",
											"tests[\"Originator institution ID echoed\"] = originatorInst.id === postman.getEnvironmentVariable(\"originatorInstId\");",
											"tests[\"Originator institution name echoed\"] = originatorInst.name === postman.getEnvironmentVariable(\"originatorInstName\");",
											"",
											"var settlementEntity = jsonData.settlementEntity;",
											"tests[\"Settlement Entity institution present\"] = settlementEntity !== null;",
											"tests[\"Settlement Entity institution ID present\"] = settlementEntity.id !== null;",
											"tests[\"Settlement Entity institution name present\"] = settlementEntity.name !== null;",
											"",
											"var receiver = jsonData.receiver;",
											"tests[\"Receiver institution present\"] = receiver !== null;",
											"tests[\"Receiver institution ID present\"] = receiver.id !== null;",
											"tests[\"Receiver institution name present\"] = receiver.name !== null;",
											"",
											"var thirdPartyIndentifiers = jsonData.thirdPartyIndentifiers;",
											"tests[\"Third Party Indentifiers present\"] = thirdPartyIndentifiers !== null;"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e5cb42d2-9385-49de-9de8-67a90cb25838",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"// References are all refType+last 4 chars in UUID",
											"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
											"",
											"var dateTime = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", dateTime);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers"
									]
								},
								"description": "Voucher provision request"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Voucher Reversals",
					"item": [
						{
							"name": "Provision request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dd8631d6-bc19-4793-81b0-265fd5aabcf3",
										"exec": [
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var thirdPartyIds = jsonData.thirdPartyIdentifiers",
											"postman.setEnvironmentVariable(\"thirdPartyId1\", thirdPartyIds[0].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef1\", thirdPartyIds[0].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId2\", thirdPartyIds[1].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef2\", thirdPartyIds[1].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId3\", thirdPartyIds[2].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef3\", thirdPartyIds[2].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId4\", thirdPartyIds[3].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef4\", thirdPartyIds[3].transactionIdentifier);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b6f268de-acbb-48e5-8056-339bc385e153",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
											"",
											"var dateTime = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", dateTime);",
											"postman.setEnvironmentVariable(\"requestTime\", dateTime);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers"
									]
								},
								"description": "Voucher provision request"
							},
							"response": []
						},
						{
							"name": "Reversal of prior provision request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f3d38f54-1570-41ff-8ed3-99751b64637e",
										"exec": [
											"tests[\"Status code is 202\"] = responseCode.code === 202;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Reversal ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"reversalId\");",
											"tests[\"Request ID returned\"] = jsonData.requestId === postman.getEnvironmentVariable(\"requestId\");",
											"tests[\"Time returned\"] = jsonData.time === postman.getEnvironmentVariable(\"timestamp\");",
											"tests[\"Third party identifiers\"] = jsonData.id !== null;"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "f29e7ad4-1053-462e-923a-8e334b44990c",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var reversalId = uuid();",
											"postman.setEnvironmentVariable(\"reversalId\", reversalId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{reversalId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"reversalReason\": \"TIMEOUT\"\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/reversals",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										"reversals"
									]
								},
								"description": "Voucher reversal advice"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Redemptions Model",
			"item": [
				{
					"name": "Redemption Confirmations",
					"item": [
						{
							"name": "Provision request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dd8631d6-bc19-4793-81b0-265fd5aabcf3",
										"exec": [
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"//Update environment variable for redemption",
											"postman.setEnvironmentVariable(\"voucherCode\", jsonData.voucher.code);",
											"postman.setEnvironmentVariable(\"voucherExpiry\", jsonData.voucher.expiryDate);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b6f268de-acbb-48e5-8056-339bc385e153",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
											"",
											"var dateTime = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", dateTime);",
											"postman.setEnvironmentVariable(\"requestTime\", dateTime);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers"
									]
								},
								"description": "Voucher provision request"
							},
							"response": []
						},
						{
							"name": "Confirmation of prior voucher",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77f36893-f14c-4241-a259-a0f076447f5c",
										"exec": [
											"tests[\"Status code is 202\"] = responseCode.code === 202;",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var confirmationId = uuid();",
											"postman.setEnvironmentVariable(\"confirmationId\", confirmationId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"tenders\": [\n    \t{\n    \t\"amount\":{\n    \t\t\"amount\":1000,\n    \t\t\"currency\":710\n    \t},\n    \t\"tenderType\":\"CASH\"\n    \t}]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/confirmations",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										"confirmations"
									]
								},
								"description": "Voucher confirmation advice"
							},
							"response": []
						},
						{
							"name": "Redemption of prior voucher",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77f36893-f14c-4241-a259-a0f076447f5c",
										"exec": [
											"tests[\"Status code is 202\"] = responseCode.code === 201;",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var redemptionId = uuid();",
											"postman.setEnvironmentVariable(\"confirmationId\", redemptionId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{redemptionId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions"
									]
								},
								"description": "Voucher confirmation advice"
							},
							"response": []
						},
						{
							"name": "Confirmation of prior redemption",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77f36893-f14c-4241-a259-a0f076447f5c",
										"exec": [
											"tests[\"Status code is 202\"] = responseCode.code === 202;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Confirmation ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"confirmationId\");",
											"tests[\"Request ID returned\"] = jsonData.requestId === postman.getEnvironmentVariable(\"redemptionId\");",
											"tests[\"Time returned\"] = jsonData.time === postman.getEnvironmentVariable(\"timestamp\");",
											"tests[\"Third party identifiers\"] = jsonData.id !== null;"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var confirmationId = uuid();",
											"postman.setEnvironmentVariable(\"confirmationId\", confirmationId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{redemptionId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions/confirmations",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions",
										"confirmations"
									]
								},
								"description": "Voucher confirmation advice"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Redemption Error responses",
					"item": [
						{
							"name": "1.Provision request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dd8631d6-bc19-4793-81b0-265fd5aabcf3",
										"exec": [
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var thirdPartyIds = jsonData.thirdPartyIdentifiers",
											"postman.setEnvironmentVariable(\"thirdPartyId1\", thirdPartyIds[0].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef1\", thirdPartyIds[0].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId2\", thirdPartyIds[1].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef2\", thirdPartyIds[1].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId3\", thirdPartyIds[2].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef3\", thirdPartyIds[2].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId4\", thirdPartyIds[3].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef4\", thirdPartyIds[3].transactionIdentifier);",
											"",
											"//Update environment variable for redemption",
											"postman.setEnvironmentVariable(\"voucherCode\", jsonData.voucher.code);",
											"postman.setEnvironmentVariable(\"voucherExpiry\", jsonData.voucher.expiryDate);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b6f268de-acbb-48e5-8056-339bc385e153",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
											"",
											"var dateTime = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", dateTime);",
											"postman.setEnvironmentVariable(\"requestTime\", dateTime);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers"
									]
								},
								"description": "Voucher provision request"
							},
							"response": []
						},
						{
							"name": "1.Redemption of unconfirmed voucher",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77f36893-f14c-4241-a259-a0f076447f5c",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is VOUCHER_NOT_REDEEMABLE\"] = jsonData.errorType === \"VOUCHER_NOT_REDEEMABLE\";",
											"tests[\"No original ID returned\"] = (\"originalId\" in jsonData) === false;",
											"tests[\"Redemption ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"redemptionId\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var redemptionId = uuid();",
											"postman.setEnvironmentVariable(\"redemptionId\", redemptionId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{redemptionId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions"
									]
								},
								"description": "Voucher confirmation advice"
							},
							"response": []
						},
						{
							"name": "1.Confirmation of prior voucher",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77f36893-f14c-4241-a259-a0f076447f5c",
										"exec": [
											"tests[\"Status code is 202\"] = responseCode.code === 202;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Confirmation ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"confirmationId\");",
											"tests[\"Request ID returned\"] = jsonData.requestId === postman.getEnvironmentVariable(\"requestId\");",
											"tests[\"Time returned\"] = jsonData.time === postman.getEnvironmentVariable(\"timestamp\");",
											"tests[\"Third party identifiers\"] = jsonData.id !== null;",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var voidId = uuid();",
											"postman.setEnvironmentVariable(\"confirmationId\", voidId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"tenders\": [\n    \t{\n    \t\"amount\":{\n    \t\t\"amount\":1000,\n    \t\t\"currency\":710\n    \t},\n    \t\"tenderType\":\"CASH\"\n    \t}]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/confirmations",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										"confirmations"
									]
								},
								"description": "Voucher confirmation advice"
							},
							"response": []
						},
						{
							"name": "1.Redemption Reversal of unredeemed voucher",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77f36893-f14c-4241-a259-a0f076447f5c",
										"exec": [
											"tests[\"Status code is 404\"] = responseCode.code === 404;",
											"",
											"var errorDetail = JSON.parse(responseBody);",
											"tests[\"Error type is UNABLE_TO_LOCATE_RECORD\"] = errorDetail.errorType === \"UNABLE_TO_LOCATE_RECORD\";",
											"tests[\"Request ID returned\"] = errorDetail.originalId === postman.getEnvironmentVariable(\"redemptionId\");",
											"tests[\"Reversal ID returned\"] = errorDetail.id === postman.getEnvironmentVariable(\"reversalId\");",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var reversalId = uuid();",
											"postman.setEnvironmentVariable(\"reversalId\", reversalId);",
											"",
											"var redemptionId = uuid();",
											"postman.setEnvironmentVariable(\"redemptionid\", redemptionId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{reversalId}}\",\n    \"requestId\": \"{{redemptionId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"reversalReason\": \"TIMEOUT\"\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions/reversals",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions",
										"reversals"
									]
								},
								"description": "Voucher confirmation advice"
							},
							"response": []
						},
						{
							"name": "1.Redemption request after redemption reversal",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77f36893-f14c-4241-a259-a0f076447f5c",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is REDEMPTION_ALREADY_REVERSED\"] = jsonData.errorType === \"REDEMPTION_ALREADY_REVERSED\";",
											"tests[\"Redemption ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"redemptionId\");",
											"",
											"tests[\"Reversal ID returned\"] = jsonData.originalId === postman.getEnvironmentVariable(\"reversalId\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"// var redemptionId = uuid();",
											"// postman.setEnvironmentVariable(\"redemptionid\", redemptionId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{redemptionId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions"
									]
								},
								"description": "Voucher confirmation advice"
							},
							"response": []
						},
						{
							"name": "2.Provision request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dd8631d6-bc19-4793-81b0-265fd5aabcf3",
										"exec": [
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var thirdPartyIds = jsonData.thirdPartyIdentifiers",
											"postman.setEnvironmentVariable(\"thirdPartyId1\", thirdPartyIds[0].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef1\", thirdPartyIds[0].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId2\", thirdPartyIds[1].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef2\", thirdPartyIds[1].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId3\", thirdPartyIds[2].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef3\", thirdPartyIds[2].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId4\", thirdPartyIds[3].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef4\", thirdPartyIds[3].transactionIdentifier);",
											"",
											"//Update environment variable for redemption",
											"postman.setEnvironmentVariable(\"voucherCode\", jsonData.voucher.code);",
											"postman.setEnvironmentVariable(\"voucherExpiry\", jsonData.voucher.expiryDate);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b6f268de-acbb-48e5-8056-339bc385e153",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
											"",
											"var dateTime = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", dateTime);",
											"postman.setEnvironmentVariable(\"requestTime\", dateTime);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers"
									]
								},
								"description": "Voucher provision request"
							},
							"response": []
						},
						{
							"name": "2.Confirmation of prior voucher",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77f36893-f14c-4241-a259-a0f076447f5c",
										"exec": [
											"tests[\"Status code is 202\"] = responseCode.code === 202;",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var voidId = uuid();",
											"postman.setEnvironmentVariable(\"confirmationId\", voidId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"tenders\": [\n    \t{\n    \t\"amount\":{\n    \t\t\"amount\":1000,\n    \t\t\"currency\":710\n    \t},\n    \t\"tenderType\":\"CASH\"\n    \t}]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/confirmations",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										"confirmations"
									]
								},
								"description": "Voucher confirmation advice"
							},
							"response": []
						},
						{
							"name": "2.RedemptionConfirmation of unredeemed voucher",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77f36893-f14c-4241-a259-a0f076447f5c",
										"exec": [
											"tests[\"Status code is 202\"] = responseCode.code === 404;",
											"",
											"var errorDetail = JSON.parse(responseBody);",
											"tests[\"Error type is UNABLE_TO_LOCATE_RECORD\"] = errorDetail.errorType === \"UNABLE_TO_LOCATE_RECORD\";",
											"tests[\"Request ID returned\"] = errorDetail.originalId === postman.getEnvironmentVariable(\"redemptionId\");",
											"tests[\"Confirmation ID returned\"] = errorDetail.id === postman.getEnvironmentVariable(\"confirmationId\");",
											"",
											"//Fail, voucher is not in a redeemed state and confirmation of its redemption cannot be processed"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var confirmationId = uuid();",
											"postman.setEnvironmentVariable(\"confirmationId\", confirmationId);",
											"",
											"var redemptionId = uuid()",
											"postman.setEnvironmentVariable(\"redemptionId\", redemptionId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{redemptionId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions/confirmations",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions",
										"confirmations"
									]
								},
								"description": "Voucher confirmation advice"
							},
							"response": []
						},
						{
							"name": "2.Redemption request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77f36893-f14c-4241-a259-a0f076447f5c",
										"exec": [
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var redemptionId = uuid();",
											"postman.setEnvironmentVariable(\"redemptionid\", redemptionId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{redemptionId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions"
									]
								},
								"description": "Voucher confirmation advice"
							},
							"response": []
						},
						{
							"name": "2.Duplicate redemption request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77f36893-f14c-4241-a259-a0f076447f5c",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is VOUCHER_ALREADY_REDEEMED\"] = jsonData.errorType === \"VOUCHER_ALREADY_REDEEMED\";",
											"tests[\"No original ID returned\"] = (\"originalId\" in jsonData) === false;",
											"tests[\"Redemption ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"redemptionId\");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var redemptionId = uuid();",
											"postman.setEnvironmentVariable(\"redemptionId\", redemptionId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{redemptionId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions"
									]
								},
								"description": "Voucher confirmation advice"
							},
							"response": []
						},
						{
							"name": "3.Provision request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dd8631d6-bc19-4793-81b0-265fd5aabcf3",
										"exec": [
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var thirdPartyIds = jsonData.thirdPartyIdentifiers",
											"postman.setEnvironmentVariable(\"thirdPartyId1\", thirdPartyIds[0].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef1\", thirdPartyIds[0].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId2\", thirdPartyIds[1].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef2\", thirdPartyIds[1].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId3\", thirdPartyIds[2].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef3\", thirdPartyIds[2].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId4\", thirdPartyIds[3].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef4\", thirdPartyIds[3].transactionIdentifier);",
											"",
											"//Update environment variable for redemption",
											"postman.setEnvironmentVariable(\"voucherCode\", jsonData.voucher.code);",
											"postman.setEnvironmentVariable(\"voucherExpiry\", jsonData.voucher.expiryDate);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b6f268de-acbb-48e5-8056-339bc385e153",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
											"",
											"var dateTime = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", dateTime);",
											"postman.setEnvironmentVariable(\"requestTime\", dateTime);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers"
									]
								},
								"description": "Voucher provision request"
							},
							"response": []
						},
						{
							"name": "3.Confirmation of prior voucher",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77f36893-f14c-4241-a259-a0f076447f5c",
										"exec": [
											"tests[\"Status code is 202\"] = responseCode.code === 202;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Confirmation ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"confirmationId\");",
											"tests[\"Request ID returned\"] = jsonData.requestId === postman.getEnvironmentVariable(\"requestId\");",
											"tests[\"Time returned\"] = jsonData.time === postman.getEnvironmentVariable(\"timestamp\");",
											"tests[\"Third party identifiers\"] = jsonData.id !== null;",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var voidId = uuid();",
											"postman.setEnvironmentVariable(\"confirmationId\", voidId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"tenders\": [\n    \t{\n    \t\"amount\":{\n    \t\t\"amount\":1000,\n    \t\t\"currency\":710\n    \t},\n    \t\"tenderType\":\"CASH\"\n    \t}]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/confirmations",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										"confirmations"
									]
								},
								"description": "Voucher confirmation advice"
							},
							"response": []
						},
						{
							"name": "3.Redemption of prior voucher",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77f36893-f14c-4241-a259-a0f076447f5c",
										"exec": [
											"tests[\"Status code is 202\"] = responseCode.code === 201;",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var redemptionId = uuid();",
											"postman.setEnvironmentVariable(\"redemptionId\", redemptionId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{redemptionId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions"
									]
								},
								"description": "Voucher confirmation advice"
							},
							"response": []
						},
						{
							"name": "3.RedemptionConfirmation of prior redemption",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77f36893-f14c-4241-a259-a0f076447f5c",
										"exec": [
											"tests[\"Status code is 202\"] = responseCode.code === 202;",
											"",
											"",
											"// This needs to be passing"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var confirmationId = uuid();",
											"postman.setEnvironmentVariable(\"confirmationId\", confirmationId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{redemptionId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions/confirmations",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions",
										"confirmations"
									]
								},
								"description": "Voucher confirmation advice"
							},
							"response": []
						},
						{
							"name": "3.Duplicate RedemptionConfirmation",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77f36893-f14c-4241-a259-a0f076447f5c",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is VOUCHER_NOT_REDEEMED\"] = jsonData.errorType === \"VOUCHER_NOT_REDEEMED\";",
											"tests[\"Confirmetion ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"confirmationId\");",
											"tests[\"Redemption Request ID returned\"] = jsonData.originalId === postman.getEnvironmentVariable(\"redemptionId\");",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var confirmationId = uuid();",
											"postman.setEnvironmentVariable(\"confirmationId\", confirmationId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{redemptionId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions/confirmations",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions",
										"confirmations"
									]
								},
								"description": "Voucher confirmation advice"
							},
							"response": []
						},
						{
							"name": "3.Reversal of confirmed redemption",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77f36893-f14c-4241-a259-a0f076447f5c",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is REDEMPTION_ALREADY_CONFIRMED\"] = jsonData.errorType === \"REDEMPTION_ALREADY_CONFIRMED\";",
											"tests[\"Reversal ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"reversalId\");",
											"tests[\"Redemption Request ID returned\"] = jsonData.originalId === postman.getEnvironmentVariable(\"redemptionId\");",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var reversalId = uuid();",
											"postman.setEnvironmentVariable(\"reversalId\", reversalId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{reversalId}}\",\n    \"requestId\": \"{{redemptionId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"reversalReason\": \"TIMEOUT\"\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions/reversals",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions",
										"reversals"
									]
								},
								"description": "Voucher confirmation advice"
							},
							"response": []
						},
						{
							"name": "4.Provision request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dd8631d6-bc19-4793-81b0-265fd5aabcf3",
										"exec": [
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var thirdPartyIds = jsonData.thirdPartyIdentifiers",
											"postman.setEnvironmentVariable(\"thirdPartyId1\", thirdPartyIds[0].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef1\", thirdPartyIds[0].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId2\", thirdPartyIds[1].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef2\", thirdPartyIds[1].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId3\", thirdPartyIds[2].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef3\", thirdPartyIds[2].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId4\", thirdPartyIds[3].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef4\", thirdPartyIds[3].transactionIdentifier);",
											"",
											"//Update environment variable for redemption",
											"postman.setEnvironmentVariable(\"voucherCode\", jsonData.voucher.code);",
											"postman.setEnvironmentVariable(\"voucherExpiry\", jsonData.voucher.expiryDate);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b6f268de-acbb-48e5-8056-339bc385e153",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
											"",
											"var dateTime = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", dateTime);",
											"postman.setEnvironmentVariable(\"requestTime\", dateTime);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers"
									]
								},
								"description": "Voucher provision request"
							},
							"response": []
						},
						{
							"name": "4.Confirmation of prior voucher",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77f36893-f14c-4241-a259-a0f076447f5c",
										"exec": [
											"tests[\"Status code is 202\"] = responseCode.code === 202;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Confirmation ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"confirmationId\");",
											"tests[\"Request ID returned\"] = jsonData.requestId === postman.getEnvironmentVariable(\"requestId\");",
											"tests[\"Time returned\"] = jsonData.time === postman.getEnvironmentVariable(\"timestamp\");",
											"tests[\"Third party identifiers\"] = jsonData.id !== null;",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var voidId = uuid();",
											"postman.setEnvironmentVariable(\"confirmationId\", voidId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"tenders\": [\n    \t{\n    \t\"amount\":{\n    \t\t\"amount\":1000,\n    \t\t\"currency\":710\n    \t},\n    \t\"tenderType\":\"CASH\"\n    \t}]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/confirmations",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										"confirmations"
									]
								},
								"description": "Voucher confirmation advice"
							},
							"response": []
						},
						{
							"name": "4.Redemption of prior voucher",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77f36893-f14c-4241-a259-a0f076447f5c",
										"exec": [
											"tests[\"Status code is 202\"] = responseCode.code === 201;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Redemption ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"redemptionId\");",
											"",
											"tests[\"Time returned\"] = jsonData.time === postman.getEnvironmentVariable(\"timestamp\");",
											"",
											"var originator = jsonData.originator;",
											"tests[\"Originator present\"] = originator !== null;",
											"tests[\"Originator Merchant present\"] = originator.merchant !== null;",
											"tests[\"Originator Institution present\"] = originator.institution !== null;",
											"tests[\"Originator terminal echoed\"] = originator.terminalId === postman.getEnvironmentVariable(\"termId\");",
											"",
											"var client = jsonData.client;",
											"tests[\"client institution present\"] = client !== null;",
											"tests[\"client institution ID present\"] = client.id !== null;",
											"tests[\"client institution name present\"] = client.name !== null;",
											"",
											"tests[\"Voucher Code returned\"] = jsonData.voucher !== null;",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var redemptionId = uuid();",
											"postman.setEnvironmentVariable(\"redemptionId\", redemptionId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{redemptionId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions"
									]
								},
								"description": "Voucher confirmation advice"
							},
							"response": []
						},
						{
							"name": "4.Reversal of prior redemption request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77f36893-f14c-4241-a259-a0f076447f5c",
										"exec": [
											"tests[\"Status code is 202\"] = responseCode.code === 202;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Reversal ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"reversalId\");",
											"tests[\"Request ID returned\"] = jsonData.requestId === postman.getEnvironmentVariable(\"redemptionId\");",
											"tests[\"Time returned\"] = jsonData.time === postman.getEnvironmentVariable(\"timestamp\");",
											"tests[\"Third party identifiers\"] = jsonData.id !== null;",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var reversalId = uuid();",
											"postman.setEnvironmentVariable(\"reversalId\", reversalId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{reversalId}}\",\n    \"requestId\": \"{{redemptionId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"reversalReason\": \"TIMEOUT\"\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions/reversals",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions",
										"reversals"
									]
								},
								"description": "Voucher confirmation advice"
							},
							"response": []
						},
						{
							"name": "4.Redemption after redemption reversal",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77f36893-f14c-4241-a259-a0f076447f5c",
										"exec": [
											"tests[\"Status code is 202\"] = responseCode.code === 201;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Redemption ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"redemptionId\");",
											"",
											"tests[\"Time returned\"] = jsonData.time === postman.getEnvironmentVariable(\"timestamp\");",
											"",
											"var originator = jsonData.originator;",
											"tests[\"Originator present\"] = originator !== null;",
											"tests[\"Originator Merchant present\"] = originator.merchant !== null;",
											"tests[\"Originator Institution present\"] = originator.institution !== null;",
											"tests[\"Originator terminal echoed\"] = originator.terminalId === postman.getEnvironmentVariable(\"termId\");",
											"",
											"var client = jsonData.client;",
											"tests[\"client institution present\"] = client !== null;",
											"tests[\"client institution ID present\"] = client.id !== null;",
											"tests[\"client institution name present\"] = client.name !== null;",
											"",
											"tests[\"Voucher Code returned\"] = jsonData.voucher !== null;",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var redemptionId = uuid();",
											"postman.setEnvironmentVariable(\"redemptionId\", redemptionId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{redemptionId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions"
									]
								},
								"description": "Voucher confirmation advice"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Redemption Missing field tests",
					"item": [
						{
							"name": "Missing voucher ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ae01840c-eacf-4559-a3c6-b0c16f71d3cc",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"id may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "df6938a2-1de9-43bf-b4d5-1ebecfb30027",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"time\":\"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing time",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f46b99a6-3cd7-4125-a52c-be8f80249b94",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"time may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a153629e-0349-4cc9-a942-707c3aaea316",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8e85bd24-f5e2-4182-884f-f2912bb4372c",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "07e98f24-6f29-4017-81c6-f5a00d5c7411",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.merchant",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "532bacbf-a351-464f-ac8c-f47efa85aae4",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "243250f5-ba10-436d-9bdd-908a848260da",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.merchant.merchantId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e7610ef0-7256-49a7-b82d-47309b10ec19",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant.merchantId may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0d107e75-4d7a-4edc-aa6a-2de2f63284e1",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.merchant.merchantName",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8f26317a-703b-4fe5-960e-2b7cb3f75c6d",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant.merchantName may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ad867204-bfe3-4849-a7f1-df959d6638e3",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\"\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing merchantName.name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7d86cda0-3a18-4b04-9660-57025727f05e",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant.merchantName.name may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0b4d47c9-4e07-460f-a8e9-22ac2a74193f",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing merchantName.city",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "392b1498-4935-46d9-a95d-b565c098cef0",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant.merchantName.city may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ca400dbf-dde1-45f0-bdee-ad2644a34b36",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing merchantName.region",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b163b054-b04d-415c-af1c-141f3108f630",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant.merchantName.region may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e127cd7b-4ca4-41e8-860a-1b295d8c8f35",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing merchantName.country",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5d0b1e64-ec66-4736-a770-63124891da77",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant.merchantName.country may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "485da880-3154-4c21-9149-1aae8bd5e6da",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.merchant.merchantType",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "17fa6f3c-e970-4e08-823f-e18f77c92c11",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant.merchantType may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6a183ddd-a570-4ea2-97ac-33c37fedb552",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.terminalId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a7ca689b-ed5f-4f5e-9eb3-f955eabac2a7",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.terminalId may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3edfa005-9fb6-49af-8eb1-341e1f1dacf7",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.institution",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6551c880-dabe-4712-a088-257845681acf",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.institution may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "c72875f3-56db-4561-b27d-00d530c2e7de",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\"\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.institution.id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ea5d1009-27fb-4205-8de3-445ff376e175",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.institution.id may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3a2c1b48-4da8-49f8-9aa5-1fd6fde94516",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.institution.name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "79164c93-9e6e-45a3-9301-030c7c04bad3",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.institution.name may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "68026678-3096-4e8b-a686-79f01c1775f4",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing client",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f83dcded-18fe-4d00-a5dd-627c41127714",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"client may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a5175f66-c2a8-4fb5-b3f8-1217372f81e9",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing client.id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "247db5a9-3667-45e2-a02e-8217456f7fa7",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"client.id may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "de4aa68c-6e0b-4794-b8d9-1f12462bd10f",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing client.name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3beb2324-d2e7-4659-8d4a-d1223ca66990",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"client.name may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e6e8e2f2-973a-4bd8-8f58-d93d815b3459",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing thirdPartyId.institutionId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3beb2324-d2e7-4659-8d4a-d1223ca66990",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg ===  \"thirdPartyIdentifiers[0].institutionId may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e6e8e2f2-973a-4bd8-8f58-d93d815b3459",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n        \n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing thirdPartyId.transactionIdentifier",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3beb2324-d2e7-4659-8d4a-d1223ca66990",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"thirdPartyIdentifiers[0].transactionIdentifier may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e6e8e2f2-973a-4bd8-8f58-d93d815b3459",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing reversal ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2232ccf9-99c5-411f-8abf-dbfc31a00359",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"id may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "f1bfd6bb-3ac9-4603-9b8f-fd0977d80ad0",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var reversalId = uuid();",
											"postman.setEnvironmentVariable(\"reversalId\", reversalId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"reversalReason\": \"TIMEOUT\"\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions/reversals",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions",
										"reversals"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing request ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ae4b1b48-8aa0-4414-b43c-b8ad1dfba99f",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"requestId may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0cbed0df-a5fd-4760-8ef1-68cb8662c916",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var reversalId = uuid();",
											"postman.setEnvironmentVariable(\"reversalId\", reversalId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{reversalId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"reversalReason\": \"TIMEOUT\"\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions/reversals",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions",
										"reversals"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing reversal time",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "437e9e49-34f2-496a-bd62-cc0c7bae229b",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"time may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "16bebee5-d288-4426-80f8-c7bdce63c1ef",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var reversalId = uuid();",
											"postman.setEnvironmentVariable(\"reversalId\", reversalId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{reversalId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"reversalReason\": \"TIMEOUT\"\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions/reversals",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions",
										"reversals"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing reversal reason",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f1a8531-2b30-4773-9b3b-b0ad1f7afc56",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"reversalReason may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "68e556a2-c3d6-4cad-bb71-c916e291576a",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var reversalId = uuid();",
											"postman.setEnvironmentVariable(\"reversalId\", reversalId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{reversalId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions/reversals",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions",
										"reversals"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing Voucher",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ae01840c-eacf-4559-a3c6-b0c16f71d3cc",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"voucher may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "df6938a2-1de9-43bf-b4d5-1ebecfb30027",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t \"id\": \"{{requestId}}\",\n   \"time\":\"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions"
									]
								}
							},
							"response": []
						}
					],
					"description": "Messages intended to test that the server correctly identifies a missing field in a message to the server.",
					"_postman_isSubFolder": true
				},
				{
					"name": "Redemption Requests",
					"item": [
						{
							"name": "Provision request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dd8631d6-bc19-4793-81b0-265fd5aabcf3",
										"exec": [
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var thirdPartyIds = jsonData.thirdPartyIdentifiers",
											"postman.setEnvironmentVariable(\"thirdPartyId1\", thirdPartyIds[0].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef1\", thirdPartyIds[0].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId2\", thirdPartyIds[1].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef2\", thirdPartyIds[1].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId3\", thirdPartyIds[2].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef3\", thirdPartyIds[2].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId4\", thirdPartyIds[3].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef4\", thirdPartyIds[3].transactionIdentifier);",
											"",
											"//Update environment variable for redemption",
											"postman.setEnvironmentVariable(\"voucherCode\", jsonData.voucher.code);",
											"postman.setEnvironmentVariable(\"voucherExpiry\", jsonData.voucher.expiryDate);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b6f268de-acbb-48e5-8056-339bc385e153",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
											"",
											"var dateTime = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", dateTime);",
											"postman.setEnvironmentVariable(\"requestTime\", dateTime);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers"
									]
								},
								"description": "Voucher provision request"
							},
							"response": []
						},
						{
							"name": "Confirmation of prior voucher",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77f36893-f14c-4241-a259-a0f076447f5c",
										"exec": [
											"tests[\"Status code is 202\"] = responseCode.code === 202;",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var confirmationId = uuid();",
											"postman.setEnvironmentVariable(\"confirmationId\", confirmationId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"tenders\": [\n    \t{\n    \t\"amount\":{\n    \t\t\"amount\":1000,\n    \t\t\"currency\":710\n    \t},\n    \t\"tenderType\":\"CASH\"\n    \t}]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/confirmations",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										"confirmations"
									]
								},
								"description": "Voucher confirmation advice"
							},
							"response": []
						},
						{
							"name": "Redemption of prior voucher",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77f36893-f14c-4241-a259-a0f076447f5c",
										"exec": [
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Redemption ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"redemptionId\");",
											"",
											"tests[\"Time returned\"] = jsonData.time === postman.getEnvironmentVariable(\"timestamp\");",
											"",
											"var originator = jsonData.originator;",
											"tests[\"Originator present\"] = originator !== null;",
											"tests[\"Originator Merchant present\"] = originator.merchant !== null;",
											"tests[\"Originator Institution present\"] = originator.institution !== null;",
											"tests[\"Originator terminal echoed\"] = originator.terminalId === postman.getEnvironmentVariable(\"termId\");",
											"",
											"var client = jsonData.client;",
											"tests[\"client institution present\"] = client !== null;",
											"tests[\"client institution ID present\"] = client.id !== null;",
											"tests[\"client institution name present\"] = client.name !== null;",
											"",
											"tests[\"Voucher Code returned\"] = jsonData.voucher !== null;",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var redemptionId = uuid();",
											"postman.setEnvironmentVariable(\"confirmationId\", redemptionId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{redemptionId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions"
									]
								},
								"description": "Voucher confirmation advice"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Redemption Reversals",
					"item": [
						{
							"name": "Provision request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dd8631d6-bc19-4793-81b0-265fd5aabcf3",
										"exec": [
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var thirdPartyIds = jsonData.thirdPartyIdentifiers",
											"postman.setEnvironmentVariable(\"thirdPartyId1\", thirdPartyIds[0].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef1\", thirdPartyIds[0].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId2\", thirdPartyIds[1].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef2\", thirdPartyIds[1].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId3\", thirdPartyIds[2].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef3\", thirdPartyIds[2].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId4\", thirdPartyIds[3].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef4\", thirdPartyIds[3].transactionIdentifier);",
											"",
											"//Update environment variable for redemption",
											"postman.setEnvironmentVariable(\"voucherCode\", jsonData.voucher.code);",
											"postman.setEnvironmentVariable(\"voucherExpiry\", jsonData.voucher.expiryDate);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b6f268de-acbb-48e5-8056-339bc385e153",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
											"",
											"var dateTime = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", dateTime);",
											"postman.setEnvironmentVariable(\"requestTime\", dateTime);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers"
									]
								},
								"description": "Voucher provision request"
							},
							"response": []
						},
						{
							"name": "Confirmation of prior voucher",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77f36893-f14c-4241-a259-a0f076447f5c",
										"exec": [
											"tests[\"Status code is 202\"] = responseCode.code === 202;",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var confirmationId = uuid();",
											"postman.setEnvironmentVariable(\"confirmationId\", confirmationId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"tenders\": [\n    \t{\n    \t\"amount\":{\n    \t\t\"amount\":1000,\n    \t\t\"currency\":710\n    \t},\n    \t\"tenderType\":\"CASH\"\n    \t}]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/confirmations",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										"confirmations"
									]
								},
								"description": "Voucher confirmation advice"
							},
							"response": []
						},
						{
							"name": "Redemption of prior voucher",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77f36893-f14c-4241-a259-a0f076447f5c",
										"exec": [
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var redemptionId = uuid();",
											"postman.setEnvironmentVariable(\"redemptionid\", redemptionId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{redemptionId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions"
									]
								},
								"description": "Voucher confirmation advice"
							},
							"response": []
						},
						{
							"name": "Reversal of prior redemption request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77f36893-f14c-4241-a259-a0f076447f5c",
										"exec": [
											"tests[\"Status code is 202\"] = responseCode.code === 202;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Reversal ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"reversalId\");",
											"tests[\"Request ID returned\"] = jsonData.requestId === postman.getEnvironmentVariable(\"redemptionId\");",
											"tests[\"Time returned\"] = jsonData.time === postman.getEnvironmentVariable(\"timestamp\");",
											"tests[\"Third party identifiers\"] = jsonData.id !== null;",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var reversalId = uuid();",
											"postman.setEnvironmentVariable(\"reversalId\", reversalId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{reversalId}}\",\n    \"requestId\": \"{{redemptionId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"reversalReason\": \"TIMEOUT\"\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions/reversals",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions",
										"reversals"
									]
								},
								"description": "Voucher confirmation advice"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Refunds Model",
			"item": [
				{
					"name": "Refund Confirmations",
					"item": [
						{
							"name": "Provision request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dd8631d6-bc19-4793-81b0-265fd5aabcf3",
										"exec": [
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"//Update environment variable for redemption",
											"postman.setEnvironmentVariable(\"voucherCode\", jsonData.voucher.code);",
											"postman.setEnvironmentVariable(\"voucherExpiry\", jsonData.voucher.expiryDate);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b6f268de-acbb-48e5-8056-339bc385e153",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
											"",
											"var dateTime = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", dateTime);",
											"postman.setEnvironmentVariable(\"requestTime\", dateTime);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers"
									]
								},
								"description": "Voucher provision request"
							},
							"response": []
						},
						{
							"name": "Confirmation of prior voucher",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77f36893-f14c-4241-a259-a0f076447f5c",
										"exec": [
											"tests[\"Status code is 202\"] = responseCode.code === 202;",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var confirmationId = uuid();",
											"postman.setEnvironmentVariable(\"confirmationId\", confirmationId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"tenders\": [\n    \t{\n    \t\"amount\":{\n    \t\t\"amount\":1000,\n    \t\t\"currency\":710\n    \t},\n    \t\"tenderType\":\"CASH\"\n    \t}]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/confirmations",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										"confirmations"
									]
								},
								"description": "Voucher confirmation advice"
							},
							"response": []
						},
						{
							"name": "Redemption of prior voucher",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77f36893-f14c-4241-a259-a0f076447f5c",
										"exec": [
											"tests[\"Status code is 202\"] = responseCode.code === 201;",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var redemptionId = uuid();",
											"postman.setEnvironmentVariable(\"redemptionId\", redemptionId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{redemptionId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions"
									]
								},
								"description": "Voucher confirmation advice"
							},
							"response": []
						},
						{
							"name": "Confirmation of prior redemption",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77f36893-f14c-4241-a259-a0f076447f5c",
										"exec": [
											"tests[\"Status code is 202\"] = responseCode.code === 202;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Confirmation ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"confirmationId\");",
											"tests[\"Request ID returned\"] = jsonData.requestId === postman.getEnvironmentVariable(\"redemptionId\");",
											"tests[\"Time returned\"] = jsonData.time === postman.getEnvironmentVariable(\"timestamp\");",
											"tests[\"Third party identifiers\"] = jsonData.id !== null;"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var confirmationId = uuid();",
											"postman.setEnvironmentVariable(\"confirmationId\", confirmationId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{redemptionId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions/confirmations",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions",
										"confirmations"
									]
								},
								"description": "Voucher confirmation advice"
							},
							"response": []
						},
						{
							"name": "Refund request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77f36893-f14c-4241-a259-a0f076447f5c",
										"exec": [
											"tests[\"Status code is 202\"] = responseCode.code === 201;",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var refundId = uuid();",
											"postman.setEnvironmentVariable(\"refundId\", refundId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{refundId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/refunds",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"refunds"
									]
								},
								"description": "Voucher confirmation advice"
							},
							"response": []
						},
						{
							"name": "Confirmation of prior refund",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77f36893-f14c-4241-a259-a0f076447f5c",
										"exec": [
											"tests[\"Status code is 202\"] = responseCode.code === 202;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Confirmation ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"confirmationId\");",
											"tests[\"Refund ID returned\"] = jsonData.requestId === postman.getEnvironmentVariable(\"refundId\");",
											"tests[\"Time returned\"] = jsonData.time === postman.getEnvironmentVariable(\"timestamp\");",
											"tests[\"Third party identifiers\"] = jsonData.id !== null;"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var confirmationId = uuid();",
											"postman.setEnvironmentVariable(\"confirmationId\", confirmationId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{refundId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/refunds/confirmations",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"refunds",
										"confirmations"
									]
								},
								"description": "Voucher confirmation advice"
							},
							"response": []
						},
						{
							"name": "Re-redemption of Refunded voucher",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77f36893-f14c-4241-a259-a0f076447f5c",
										"exec": [
											"tests[\"Status code is 202\"] = responseCode.code === 201;",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var redemptionId = uuid();",
											"postman.setEnvironmentVariable(\"confirmationId\", redemptionId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{redemptionId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions"
									]
								},
								"description": "Voucher confirmation advice"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Error responses",
					"item": [
						{
							"name": "Refund Errors",
							"item": [
								{
									"name": "Provision request",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dd8631d6-bc19-4793-81b0-265fd5aabcf3",
												"exec": [
													"tests[\"Status code is 201\"] = responseCode.code === 201;",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"//Update environment variable for redemption",
													"postman.setEnvironmentVariable(\"voucherCode\", jsonData.voucher.code);",
													"postman.setEnvironmentVariable(\"voucherExpiry\", jsonData.voucher.expiryDate);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b6f268de-acbb-48e5-8056-339bc385e153",
												"exec": [
													"function _p8(s) {",
													"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
													"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
													"   }",
													"",
													"function uuid() {",
													"   ",
													"   return _p8() + _p8(true) + _p8(true) + _p8();",
													"}",
													"",
													"var requestId = uuid();",
													"postman.setEnvironmentVariable(\"requestId\", requestId);",
													"",
													"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
													"",
													"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
													"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
													"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
													"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
													"",
													"var dateTime = new Date().toISOString();",
													"postman.setEnvironmentVariable(\"timestamp\", dateTime);",
													"postman.setEnvironmentVariable(\"requestTime\", dateTime);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{clientInstId}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "password",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/suv/{{version}}/vouchers",
											"host": [
												"{{host}}"
											],
											"path": [
												"suv",
												"{{version}}",
												"vouchers"
											]
										},
										"description": "Voucher provision request"
									},
									"response": []
								},
								{
									"name": "Confirmation of prior voucher",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "77f36893-f14c-4241-a259-a0f076447f5c",
												"exec": [
													"tests[\"Status code is 202\"] = responseCode.code === 202;",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
												"exec": [
													"function _p8(s) {",
													"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
													"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
													"   }",
													"",
													"function uuid() {",
													"   ",
													"   return _p8() + _p8(true) + _p8(true) + _p8();",
													"}",
													"",
													"var confirmationId = uuid();",
													"postman.setEnvironmentVariable(\"confirmationId\", confirmationId);",
													"",
													"var timestamp = new Date().toISOString();",
													"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{clientInstId}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "password",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"tenders\": [\n    \t{\n    \t\"amount\":{\n    \t\t\"amount\":1000,\n    \t\t\"currency\":710\n    \t},\n    \t\"tenderType\":\"CASH\"\n    \t}]\n}"
										},
										"url": {
											"raw": "{{host}}/suv/{{version}}/vouchers/confirmations",
											"host": [
												"{{host}}"
											],
											"path": [
												"suv",
												"{{version}}",
												"vouchers",
												"confirmations"
											]
										},
										"description": "Voucher confirmation advice"
									},
									"response": []
								},
								{
									"name": "Redemption of prior voucher",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "77f36893-f14c-4241-a259-a0f076447f5c",
												"exec": [
													"tests[\"Status code is 202\"] = responseCode.code === 201;",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
												"exec": [
													"function _p8(s) {",
													"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
													"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
													"   }",
													"",
													"function uuid() {",
													"   ",
													"   return _p8() + _p8(true) + _p8(true) + _p8();",
													"}",
													"",
													"var redemptionId = uuid();",
													"postman.setEnvironmentVariable(\"confirmationId\", redemptionId);",
													"",
													"var timestamp = new Date().toISOString();",
													"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{clientInstId}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "password",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{redemptionId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{host}}/suv/{{version}}/redemptions",
											"host": [
												"{{host}}"
											],
											"path": [
												"suv",
												"{{version}}",
												"redemptions"
											]
										},
										"description": "Voucher confirmation advice"
									},
									"response": []
								},
								{
									"name": "Refund of unconfirmed redemption",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "77f36893-f14c-4241-a259-a0f076447f5c",
												"exec": [
													"tests[\"Status code is 400\"] = responseCode.code === 400;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"Error type is REDEMPTION_NOT_CONFIRMED\"] = jsonData.errorType === \"REDEMPTION_NOT_CONFIRMED\";",
													"tests[\"No original ID returned\"] = (\"originalId\" in jsonData) === false;",
													"tests[\"Refund ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"refundId\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
												"exec": [
													"function _p8(s) {",
													"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
													"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
													"   }",
													"",
													"function uuid() {",
													"   ",
													"   return _p8() + _p8(true) + _p8(true) + _p8();",
													"}",
													"",
													"var refundId = uuid();",
													"postman.setEnvironmentVariable(\"refundId\", refundId);",
													"",
													"var timestamp = new Date().toISOString();",
													"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{clientInstId}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "password",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{refundId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{host}}/suv/{{version}}/refunds",
											"host": [
												"{{host}}"
											],
											"path": [
												"suv",
												"{{version}}",
												"refunds"
											]
										},
										"description": "Voucher confirmation advice"
									},
									"response": []
								},
								{
									"name": "Confirmation of prior redemption",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "77f36893-f14c-4241-a259-a0f076447f5c",
												"exec": [
													"tests[\"Status code is 202\"] = responseCode.code === 202;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"Confirmation ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"confirmationId\");",
													"tests[\"Request ID returned\"] = jsonData.requestId === postman.getEnvironmentVariable(\"redemptionId\");",
													"tests[\"Time returned\"] = jsonData.time === postman.getEnvironmentVariable(\"timestamp\");",
													"tests[\"Third party identifiers\"] = jsonData.id !== null;"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
												"exec": [
													"function _p8(s) {",
													"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
													"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
													"   }",
													"",
													"function uuid() {",
													"   ",
													"   return _p8() + _p8(true) + _p8(true) + _p8();",
													"}",
													"",
													"var confirmationId = uuid();",
													"postman.setEnvironmentVariable(\"confirmationId\", confirmationId);",
													"",
													"var timestamp = new Date().toISOString();",
													"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{clientInstId}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "password",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{redemptionId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/suv/{{version}}/redemptions/confirmations",
											"host": [
												"{{host}}"
											],
											"path": [
												"suv",
												"{{version}}",
												"redemptions",
												"confirmations"
											]
										},
										"description": "Voucher confirmation advice"
									},
									"response": []
								},
								{
									"name": "Refund Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "77f36893-f14c-4241-a259-a0f076447f5c",
												"exec": [
													"tests[\"Status code is 202\"] = responseCode.code === 201;",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
												"exec": [
													"function _p8(s) {",
													"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
													"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
													"   }",
													"",
													"function uuid() {",
													"   ",
													"   return _p8() + _p8(true) + _p8(true) + _p8();",
													"}",
													"",
													"var refundId = uuid();",
													"postman.setEnvironmentVariable(\"refundId\", refundId);",
													"",
													"var timestamp = new Date().toISOString();",
													"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{clientInstId}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "password",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{refundId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{host}}/suv/{{version}}/refunds",
											"host": [
												"{{host}}"
											],
											"path": [
												"suv",
												"{{version}}",
												"refunds"
											]
										},
										"description": "Voucher confirmation advice"
									},
									"response": []
								},
								{
									"name": "Duplicate refund request",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "77f36893-f14c-4241-a259-a0f076447f5c",
												"exec": [
													"tests[\"Status code is 400\"] = responseCode.code === 400;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"Error type is VOUCHER_ALREADY_REFUNDED\"] = jsonData.errorType === \"VOUCHER_ALREADY_REFUNDED\";",
													"tests[\"No original ID returned\"] = (\"originalId\" in jsonData) === false;",
													"tests[\"Refund ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"refundId\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
												"exec": [
													"function _p8(s) {",
													"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
													"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
													"   }",
													"",
													"function uuid() {",
													"   ",
													"   return _p8() + _p8(true) + _p8(true) + _p8();",
													"}",
													"",
													"var refundId = uuid();",
													"postman.setEnvironmentVariable(\"refundId\", refundId);",
													"",
													"var timestamp = new Date().toISOString();",
													"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{clientInstId}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "password",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{refundId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{host}}/suv/{{version}}/refunds",
											"host": [
												"{{host}}"
											],
											"path": [
												"suv",
												"{{version}}",
												"refunds"
											]
										},
										"description": "Voucher confirmation advice"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "8323c59b-2f12-4fd4-afb4-34d2d9bfdab9",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "aac22cb1-1228-49bb-b460-dd1f42c7423c",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Refund Reversal Errors 1",
							"item": [
								{
									"name": "Provision request",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dd8631d6-bc19-4793-81b0-265fd5aabcf3",
												"exec": [
													"tests[\"Status code is 201\"] = responseCode.code === 201;",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"//Update environment variable for redemption",
													"postman.setEnvironmentVariable(\"voucherCode\", jsonData.voucher.code);",
													"postman.setEnvironmentVariable(\"voucherExpiry\", jsonData.voucher.expiryDate);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b6f268de-acbb-48e5-8056-339bc385e153",
												"exec": [
													"function _p8(s) {",
													"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
													"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
													"   }",
													"",
													"function uuid() {",
													"   ",
													"   return _p8() + _p8(true) + _p8(true) + _p8();",
													"}",
													"",
													"var requestId = uuid();",
													"postman.setEnvironmentVariable(\"requestId\", requestId);",
													"",
													"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
													"",
													"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
													"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
													"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
													"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
													"",
													"var dateTime = new Date().toISOString();",
													"postman.setEnvironmentVariable(\"timestamp\", dateTime);",
													"postman.setEnvironmentVariable(\"requestTime\", dateTime);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{clientInstId}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "password",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/suv/{{version}}/vouchers",
											"host": [
												"{{host}}"
											],
											"path": [
												"suv",
												"{{version}}",
												"vouchers"
											]
										},
										"description": "Voucher provision request"
									},
									"response": []
								},
								{
									"name": "Confirmation of prior voucher",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "77f36893-f14c-4241-a259-a0f076447f5c",
												"exec": [
													"tests[\"Status code is 202\"] = responseCode.code === 202;",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
												"exec": [
													"function _p8(s) {",
													"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
													"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
													"   }",
													"",
													"function uuid() {",
													"   ",
													"   return _p8() + _p8(true) + _p8(true) + _p8();",
													"}",
													"",
													"var confirmationId = uuid();",
													"postman.setEnvironmentVariable(\"confirmationId\", confirmationId);",
													"",
													"var timestamp = new Date().toISOString();",
													"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{clientInstId}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "password",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"tenders\": [\n    \t{\n    \t\"amount\":{\n    \t\t\"amount\":1000,\n    \t\t\"currency\":710\n    \t},\n    \t\"tenderType\":\"CASH\"\n    \t}]\n}"
										},
										"url": {
											"raw": "{{host}}/suv/{{version}}/vouchers/confirmations",
											"host": [
												"{{host}}"
											],
											"path": [
												"suv",
												"{{version}}",
												"vouchers",
												"confirmations"
											]
										},
										"description": "Voucher confirmation advice"
									},
									"response": []
								},
								{
									"name": "Redemption of prior voucher",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "77f36893-f14c-4241-a259-a0f076447f5c",
												"exec": [
													"tests[\"Status code is 202\"] = responseCode.code === 201;",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
												"exec": [
													"function _p8(s) {",
													"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
													"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
													"   }",
													"",
													"function uuid() {",
													"   ",
													"   return _p8() + _p8(true) + _p8(true) + _p8();",
													"}",
													"",
													"var redemptionId = uuid();",
													"postman.setEnvironmentVariable(\"confirmationId\", redemptionId);",
													"",
													"var timestamp = new Date().toISOString();",
													"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{clientInstId}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "password",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{redemptionId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{host}}/suv/{{version}}/redemptions",
											"host": [
												"{{host}}"
											],
											"path": [
												"suv",
												"{{version}}",
												"redemptions"
											]
										},
										"description": "Voucher confirmation advice"
									},
									"response": []
								},
								{
									"name": "Confirmation of prior redemption",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "77f36893-f14c-4241-a259-a0f076447f5c",
												"exec": [
													"tests[\"Status code is 202\"] = responseCode.code === 202;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"Confirmation ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"confirmationId\");",
													"tests[\"Request ID returned\"] = jsonData.requestId === postman.getEnvironmentVariable(\"redemptionId\");",
													"tests[\"Time returned\"] = jsonData.time === postman.getEnvironmentVariable(\"timestamp\");",
													"tests[\"Third party identifiers\"] = jsonData.id !== null;"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
												"exec": [
													"function _p8(s) {",
													"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
													"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
													"   }",
													"",
													"function uuid() {",
													"   ",
													"   return _p8() + _p8(true) + _p8(true) + _p8();",
													"}",
													"",
													"var confirmationId = uuid();",
													"postman.setEnvironmentVariable(\"confirmationId\", confirmationId);",
													"",
													"var timestamp = new Date().toISOString();",
													"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{clientInstId}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "password",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{redemptionId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/suv/{{version}}/redemptions/confirmations",
											"host": [
												"{{host}}"
											],
											"path": [
												"suv",
												"{{version}}",
												"redemptions",
												"confirmations"
											]
										},
										"description": "Voucher confirmation advice"
									},
									"response": []
								},
								{
									"name": "Reversal of unrefunded voucher",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "77f36893-f14c-4241-a259-a0f076447f5c",
												"exec": [
													"tests[\"Status code is 404\"] = responseCode.code === 404;",
													"",
													"var errorDetail = JSON.parse(responseBody);",
													"tests[\"Error type is UNABLE_TO_LOCATE_RECORD\"] = errorDetail.errorType === \"UNABLE_TO_LOCATE_RECORD\";",
													"tests[\"Request ID returned\"] = errorDetail.originalId === postman.getEnvironmentVariable(\"refundId\");",
													"tests[\"Reversal ID returned\"] = errorDetail.id === postman.getEnvironmentVariable(\"reversalId\");",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
												"exec": [
													"function _p8(s) {",
													"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
													"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
													"   }",
													"",
													"function uuid() {",
													"   ",
													"   return _p8() + _p8(true) + _p8(true) + _p8();",
													"}",
													"",
													"var reversalId = uuid();",
													"postman.setEnvironmentVariable(\"reversalId\", reversalId);",
													"",
													"var refundId = uuid();",
													"postman.setEnvironmentVariable(\"refundId\", refundId);",
													"",
													"var timestamp = new Date().toISOString();",
													"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{clientInstId}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "password",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{reversalId}}\",\n    \"requestId\": \"{{refundId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"reversalReason\": \"TIMEOUT\"\n}"
										},
										"url": {
											"raw": "{{host}}/suv/{{version}}/refunds/reversals",
											"host": [
												"{{host}}"
											],
											"path": [
												"suv",
												"{{version}}",
												"refunds",
												"reversals"
											]
										},
										"description": "Voucher confirmation advice"
									},
									"response": []
								},
								{
									"name": "Refund Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "77f36893-f14c-4241-a259-a0f076447f5c",
												"exec": [
													"tests[\"Status code is 400\"] = responseCode.code === 400;",
													"",
													"",
													"var errorDetail = JSON.parse(responseBody);",
													"tests[\"Error type is REFUND_ALREADY_REVERSED\"] = errorDetail.errorType === \"REFUND_ALREADY_REVERSED\";",
													"tests[\"Reversal ID returned\"] = errorDetail.originalId === postman.getEnvironmentVariable(\"reversalId\");",
													"tests[\"Refund ID returned\"] = errorDetail.id === postman.getEnvironmentVariable(\"refundId\");",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
												"exec": [
													"function _p8(s) {",
													"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
													"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
													"   }",
													"",
													"function uuid() {",
													"   ",
													"   return _p8() + _p8(true) + _p8(true) + _p8();",
													"}",
													"",
													"var timestamp = new Date().toISOString();",
													"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{clientInstId}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "password",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{refundId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{host}}/suv/{{version}}/refunds",
											"host": [
												"{{host}}"
											],
											"path": [
												"suv",
												"{{version}}",
												"refunds"
											]
										},
										"description": "Voucher confirmation advice"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "8323c59b-2f12-4fd4-afb4-34d2d9bfdab9",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "aac22cb1-1228-49bb-b460-dd1f42c7423c",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Refund Reversal Errors 2",
							"item": [
								{
									"name": "Provision request",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dd8631d6-bc19-4793-81b0-265fd5aabcf3",
												"exec": [
													"tests[\"Status code is 201\"] = responseCode.code === 201;",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"//Update environment variable for redemption",
													"postman.setEnvironmentVariable(\"voucherCode\", jsonData.voucher.code);",
													"postman.setEnvironmentVariable(\"voucherExpiry\", jsonData.voucher.expiryDate);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b6f268de-acbb-48e5-8056-339bc385e153",
												"exec": [
													"function _p8(s) {",
													"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
													"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
													"   }",
													"",
													"function uuid() {",
													"   ",
													"   return _p8() + _p8(true) + _p8(true) + _p8();",
													"}",
													"",
													"var requestId = uuid();",
													"postman.setEnvironmentVariable(\"requestId\", requestId);",
													"",
													"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
													"",
													"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
													"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
													"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
													"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
													"",
													"var dateTime = new Date().toISOString();",
													"postman.setEnvironmentVariable(\"timestamp\", dateTime);",
													"postman.setEnvironmentVariable(\"requestTime\", dateTime);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{clientInstId}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "password",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/suv/{{version}}/vouchers",
											"host": [
												"{{host}}"
											],
											"path": [
												"suv",
												"{{version}}",
												"vouchers"
											]
										},
										"description": "Voucher provision request"
									},
									"response": []
								},
								{
									"name": "Confirmation of prior voucher",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "77f36893-f14c-4241-a259-a0f076447f5c",
												"exec": [
													"tests[\"Status code is 202\"] = responseCode.code === 202;",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
												"exec": [
													"function _p8(s) {",
													"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
													"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
													"   }",
													"",
													"function uuid() {",
													"   ",
													"   return _p8() + _p8(true) + _p8(true) + _p8();",
													"}",
													"",
													"var confirmationId = uuid();",
													"postman.setEnvironmentVariable(\"confirmationId\", confirmationId);",
													"",
													"var timestamp = new Date().toISOString();",
													"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{clientInstId}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "password",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"tenders\": [\n    \t{\n    \t\"amount\":{\n    \t\t\"amount\":1000,\n    \t\t\"currency\":710\n    \t},\n    \t\"tenderType\":\"CASH\"\n    \t}]\n}"
										},
										"url": {
											"raw": "{{host}}/suv/{{version}}/vouchers/confirmations",
											"host": [
												"{{host}}"
											],
											"path": [
												"suv",
												"{{version}}",
												"vouchers",
												"confirmations"
											]
										},
										"description": "Voucher confirmation advice"
									},
									"response": []
								},
								{
									"name": "Redemption of prior voucher",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "77f36893-f14c-4241-a259-a0f076447f5c",
												"exec": [
													"tests[\"Status code is 202\"] = responseCode.code === 201;",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
												"exec": [
													"function _p8(s) {",
													"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
													"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
													"   }",
													"",
													"function uuid() {",
													"   ",
													"   return _p8() + _p8(true) + _p8(true) + _p8();",
													"}",
													"",
													"var redemptionId = uuid();",
													"postman.setEnvironmentVariable(\"confirmationId\", redemptionId);",
													"",
													"var timestamp = new Date().toISOString();",
													"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{clientInstId}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "password",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{redemptionId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{host}}/suv/{{version}}/redemptions",
											"host": [
												"{{host}}"
											],
											"path": [
												"suv",
												"{{version}}",
												"redemptions"
											]
										},
										"description": "Voucher confirmation advice"
									},
									"response": []
								},
								{
									"name": "Confirmation of prior redemption",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "77f36893-f14c-4241-a259-a0f076447f5c",
												"exec": [
													"tests[\"Status code is 202\"] = responseCode.code === 202;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"Confirmation ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"confirmationId\");",
													"tests[\"Request ID returned\"] = jsonData.requestId === postman.getEnvironmentVariable(\"redemptionId\");",
													"tests[\"Time returned\"] = jsonData.time === postman.getEnvironmentVariable(\"timestamp\");",
													"tests[\"Third party identifiers\"] = jsonData.id !== null;"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
												"exec": [
													"function _p8(s) {",
													"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
													"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
													"   }",
													"",
													"function uuid() {",
													"   ",
													"   return _p8() + _p8(true) + _p8(true) + _p8();",
													"}",
													"",
													"var confirmationId = uuid();",
													"postman.setEnvironmentVariable(\"confirmationId\", confirmationId);",
													"",
													"var timestamp = new Date().toISOString();",
													"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{clientInstId}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "password",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{redemptionId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/suv/{{version}}/redemptions/confirmations",
											"host": [
												"{{host}}"
											],
											"path": [
												"suv",
												"{{version}}",
												"redemptions",
												"confirmations"
											]
										},
										"description": "Voucher confirmation advice"
									},
									"response": []
								},
								{
									"name": "Refund Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "77f36893-f14c-4241-a259-a0f076447f5c",
												"exec": [
													"tests[\"Status code is 201\"] = responseCode.code === 201;",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
												"exec": [
													"function _p8(s) {",
													"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
													"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
													"   }",
													"",
													"function uuid() {",
													"   ",
													"   return _p8() + _p8(true) + _p8(true) + _p8();",
													"}",
													"var refundId = uuid();",
													"postman.setEnvironmentVariable(\"refundId\", refundId);",
													"",
													"var timestamp = new Date().toISOString();",
													"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{clientInstId}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "password",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{refundId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{host}}/suv/{{version}}/refunds",
											"host": [
												"{{host}}"
											],
											"path": [
												"suv",
												"{{version}}",
												"refunds"
											]
										},
										"description": "Voucher confirmation advice"
									},
									"response": []
								},
								{
									"name": "Refund confirmation",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "77f36893-f14c-4241-a259-a0f076447f5c",
												"exec": [
													"tests[\"Status code is 202\"] = responseCode.code === 202;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"Confirmation ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"confirmationId\");",
													"tests[\"Refund ID returned\"] = jsonData.requestId === postman.getEnvironmentVariable(\"refundId\");",
													"tests[\"Time returned\"] = jsonData.time === postman.getEnvironmentVariable(\"timestamp\");",
													"tests[\"Third party identifiers\"] = jsonData.id !== null;"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
												"exec": [
													"function _p8(s) {",
													"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
													"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
													"   }",
													"",
													"function uuid() {",
													"   ",
													"   return _p8() + _p8(true) + _p8(true) + _p8();",
													"}",
													"",
													"var confirmationId = uuid();",
													"postman.setEnvironmentVariable(\"confirmationId\", confirmationId);",
													"",
													"var timestamp = new Date().toISOString();",
													"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{clientInstId}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "password",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{refundId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/suv/{{version}}/refunds/confirmations",
											"host": [
												"{{host}}"
											],
											"path": [
												"suv",
												"{{version}}",
												"refunds",
												"confirmations"
											]
										},
										"description": "Voucher confirmation advice"
									},
									"response": []
								},
								{
									"name": "Reversal of confirmed refund",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "77f36893-f14c-4241-a259-a0f076447f5c",
												"exec": [
													"tests[\"Status code is 400\"] = responseCode.code === 400;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"Reversal ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"reversalId\");",
													"tests[\"Refund ID returned\"] = jsonData.originalId === postman.getEnvironmentVariable(\"refundId\");",
													"tests[\"Error Type is REFUND_ALREADY_CONFIRMED\"] = jsonData.errorType === \"REFUND_ALREADY_CONFIRMED\";"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
												"exec": [
													"function _p8(s) {",
													"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
													"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
													"   }",
													"",
													"function uuid() {",
													"   ",
													"   return _p8() + _p8(true) + _p8(true) + _p8();",
													"}",
													"",
													"var reversalId = uuid();",
													"postman.setEnvironmentVariable(\"reversalId\", reversalId);",
													"",
													"var timestamp = new Date().toISOString();",
													"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{clientInstId}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "password",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{reversalId}}\",\n    \"requestId\": \"{{refundId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"reversalReason\": \"TIMEOUT\"\n}"
										},
										"url": {
											"raw": "{{host}}/suv/{{version}}/refunds/reversals",
											"host": [
												"{{host}}"
											],
											"path": [
												"suv",
												"{{version}}",
												"refunds",
												"reversals"
											]
										},
										"description": "Voucher confirmation advice"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "8323c59b-2f12-4fd4-afb4-34d2d9bfdab9",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "aac22cb1-1228-49bb-b460-dd1f42c7423c",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Refund Confirmation Errors",
							"item": [
								{
									"name": "Provision request",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dd8631d6-bc19-4793-81b0-265fd5aabcf3",
												"exec": [
													"tests[\"Status code is 201\"] = responseCode.code === 201;",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"//Update environment variable for redemption",
													"postman.setEnvironmentVariable(\"voucherCode\", jsonData.voucher.code);",
													"postman.setEnvironmentVariable(\"voucherExpiry\", jsonData.voucher.expiryDate);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b6f268de-acbb-48e5-8056-339bc385e153",
												"exec": [
													"function _p8(s) {",
													"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
													"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
													"   }",
													"",
													"function uuid() {",
													"   ",
													"   return _p8() + _p8(true) + _p8(true) + _p8();",
													"}",
													"",
													"var requestId = uuid();",
													"postman.setEnvironmentVariable(\"requestId\", requestId);",
													"",
													"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
													"",
													"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
													"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
													"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
													"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
													"",
													"var dateTime = new Date().toISOString();",
													"postman.setEnvironmentVariable(\"timestamp\", dateTime);",
													"postman.setEnvironmentVariable(\"requestTime\", dateTime);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{clientInstId}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "password",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/suv/{{version}}/vouchers",
											"host": [
												"{{host}}"
											],
											"path": [
												"suv",
												"{{version}}",
												"vouchers"
											]
										},
										"description": "Voucher provision request"
									},
									"response": []
								},
								{
									"name": "Confirmation of prior voucher",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "77f36893-f14c-4241-a259-a0f076447f5c",
												"exec": [
													"tests[\"Status code is 202\"] = responseCode.code === 202;",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
												"exec": [
													"function _p8(s) {",
													"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
													"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
													"   }",
													"",
													"function uuid() {",
													"   ",
													"   return _p8() + _p8(true) + _p8(true) + _p8();",
													"}",
													"",
													"var confirmationId = uuid();",
													"postman.setEnvironmentVariable(\"confirmationId\", confirmationId);",
													"",
													"var timestamp = new Date().toISOString();",
													"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{clientInstId}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "password",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"tenders\": [\n    \t{\n    \t\"amount\":{\n    \t\t\"amount\":1000,\n    \t\t\"currency\":710\n    \t},\n    \t\"tenderType\":\"CASH\"\n    \t}]\n}"
										},
										"url": {
											"raw": "{{host}}/suv/{{version}}/vouchers/confirmations",
											"host": [
												"{{host}}"
											],
											"path": [
												"suv",
												"{{version}}",
												"vouchers",
												"confirmations"
											]
										},
										"description": "Voucher confirmation advice"
									},
									"response": []
								},
								{
									"name": "Redemption of prior voucher",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "77f36893-f14c-4241-a259-a0f076447f5c",
												"exec": [
													"tests[\"Status code is 202\"] = responseCode.code === 201;",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
												"exec": [
													"function _p8(s) {",
													"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
													"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
													"   }",
													"",
													"function uuid() {",
													"   ",
													"   return _p8() + _p8(true) + _p8(true) + _p8();",
													"}",
													"",
													"var redemptionId = uuid();",
													"postman.setEnvironmentVariable(\"confirmationId\", redemptionId);",
													"",
													"var timestamp = new Date().toISOString();",
													"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{clientInstId}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "password",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{redemptionId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{host}}/suv/{{version}}/redemptions",
											"host": [
												"{{host}}"
											],
											"path": [
												"suv",
												"{{version}}",
												"redemptions"
											]
										},
										"description": "Voucher confirmation advice"
									},
									"response": []
								},
								{
									"name": "Confirmation of prior redemption",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "77f36893-f14c-4241-a259-a0f076447f5c",
												"exec": [
													"tests[\"Status code is 202\"] = responseCode.code === 202;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"Confirmation ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"confirmationId\");",
													"tests[\"Request ID returned\"] = jsonData.requestId === postman.getEnvironmentVariable(\"redemptionId\");",
													"tests[\"Time returned\"] = jsonData.time === postman.getEnvironmentVariable(\"timestamp\");",
													"tests[\"Third party identifiers\"] = jsonData.id !== null;"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
												"exec": [
													"function _p8(s) {",
													"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
													"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
													"   }",
													"",
													"function uuid() {",
													"   ",
													"   return _p8() + _p8(true) + _p8(true) + _p8();",
													"}",
													"",
													"var confirmationId = uuid();",
													"postman.setEnvironmentVariable(\"confirmationId\", confirmationId);",
													"",
													"var timestamp = new Date().toISOString();",
													"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{clientInstId}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "password",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{redemptionId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/suv/{{version}}/redemptions/confirmations",
											"host": [
												"{{host}}"
											],
											"path": [
												"suv",
												"{{version}}",
												"redemptions",
												"confirmations"
											]
										},
										"description": "Voucher confirmation advice"
									},
									"response": []
								},
								{
									"name": "Refund Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "77f36893-f14c-4241-a259-a0f076447f5c",
												"exec": [
													"tests[\"Status code is 202\"] = responseCode.code === 201;",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
												"exec": [
													"function _p8(s) {",
													"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
													"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
													"   }",
													"",
													"function uuid() {",
													"   ",
													"   return _p8() + _p8(true) + _p8(true) + _p8();",
													"}",
													"",
													"var refundId = uuid();",
													"postman.setEnvironmentVariable(\"refundId\", refundId);",
													"",
													"var timestamp = new Date().toISOString();",
													"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{clientInstId}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "password",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{refundId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{host}}/suv/{{version}}/refunds",
											"host": [
												"{{host}}"
											],
											"path": [
												"suv",
												"{{version}}",
												"refunds"
											]
										},
										"description": "Voucher confirmation advice"
									},
									"response": []
								},
								{
									"name": "Refund confirmation",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "77f36893-f14c-4241-a259-a0f076447f5c",
												"exec": [
													"tests[\"Status code is 202\"] = responseCode.code === 202;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"Confirmation ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"confirmationId\");",
													"tests[\"Refund ID returned\"] = jsonData.requestId === postman.getEnvironmentVariable(\"refundId\");",
													"tests[\"Time returned\"] = jsonData.time === postman.getEnvironmentVariable(\"timestamp\");",
													"tests[\"Third party identifiers\"] = jsonData.id !== null;"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
												"exec": [
													"function _p8(s) {",
													"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
													"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
													"   }",
													"",
													"function uuid() {",
													"   ",
													"   return _p8() + _p8(true) + _p8(true) + _p8();",
													"}",
													"",
													"var confirmationId = uuid();",
													"postman.setEnvironmentVariable(\"confirmationId\", confirmationId);",
													"",
													"var timestamp = new Date().toISOString();",
													"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{clientInstId}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "password",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{refundId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/suv/{{version}}/refunds/confirmations",
											"host": [
												"{{host}}"
											],
											"path": [
												"suv",
												"{{version}}",
												"refunds",
												"confirmations"
											]
										},
										"description": "Voucher confirmation advice"
									},
									"response": []
								},
								{
									"name": "Refund of confirmed refund voucher",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "77f36893-f14c-4241-a259-a0f076447f5c",
												"exec": [
													"tests[\"Status code is 400\"] = responseCode.code === 400;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"Error type is VOUCHER_NOT_REDEEMED\"] = jsonData.errorType === \"VOUCHER_NOT_REDEEMED\";",
													"tests[\"No original ID returned\"] = (\"originalId\" in jsonData) === false;",
													"tests[\"Refund ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"refundId\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
												"exec": [
													"function _p8(s) {",
													"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
													"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
													"   }",
													"",
													"function uuid() {",
													"   ",
													"   return _p8() + _p8(true) + _p8(true) + _p8();",
													"}",
													"",
													"var refundId = uuid();",
													"postman.setEnvironmentVariable(\"refundId\", refundId);",
													"",
													"var timestamp = new Date().toISOString();",
													"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{clientInstId}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "password",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{refundId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{host}}/suv/{{version}}/refunds",
											"host": [
												"{{host}}"
											],
											"path": [
												"suv",
												"{{version}}",
												"refunds"
											]
										},
										"description": "Voucher confirmation advice"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "8323c59b-2f12-4fd4-afb4-34d2d9bfdab9",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "aac22cb1-1228-49bb-b460-dd1f42c7423c",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Refund Confirmation Reversal Errors",
							"item": [
								{
									"name": "Provision request",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dd8631d6-bc19-4793-81b0-265fd5aabcf3",
												"exec": [
													"tests[\"Status code is 201\"] = responseCode.code === 201;",
													"var jsonData = JSON.parse(responseBody);",
													"",
													"//Update environment variable for redemption",
													"postman.setEnvironmentVariable(\"voucherCode\", jsonData.voucher.code);",
													"postman.setEnvironmentVariable(\"voucherExpiry\", jsonData.voucher.expiryDate);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "b6f268de-acbb-48e5-8056-339bc385e153",
												"exec": [
													"function _p8(s) {",
													"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
													"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
													"   }",
													"",
													"function uuid() {",
													"   ",
													"   return _p8() + _p8(true) + _p8(true) + _p8();",
													"}",
													"",
													"var requestId = uuid();",
													"postman.setEnvironmentVariable(\"requestId\", requestId);",
													"",
													"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
													"",
													"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
													"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
													"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
													"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
													"",
													"var dateTime = new Date().toISOString();",
													"postman.setEnvironmentVariable(\"timestamp\", dateTime);",
													"postman.setEnvironmentVariable(\"requestTime\", dateTime);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{clientInstId}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "password",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/suv/{{version}}/vouchers",
											"host": [
												"{{host}}"
											],
											"path": [
												"suv",
												"{{version}}",
												"vouchers"
											]
										},
										"description": "Voucher provision request"
									},
									"response": []
								},
								{
									"name": "Confirmation of prior voucher",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "77f36893-f14c-4241-a259-a0f076447f5c",
												"exec": [
													"tests[\"Status code is 202\"] = responseCode.code === 202;",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
												"exec": [
													"function _p8(s) {",
													"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
													"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
													"   }",
													"",
													"function uuid() {",
													"   ",
													"   return _p8() + _p8(true) + _p8(true) + _p8();",
													"}",
													"",
													"var confirmationId = uuid();",
													"postman.setEnvironmentVariable(\"confirmationId\", confirmationId);",
													"",
													"var timestamp = new Date().toISOString();",
													"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{clientInstId}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "password",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"tenders\": [\n    \t{\n    \t\"amount\":{\n    \t\t\"amount\":1000,\n    \t\t\"currency\":710\n    \t},\n    \t\"tenderType\":\"CASH\"\n    \t}]\n}"
										},
										"url": {
											"raw": "{{host}}/suv/{{version}}/vouchers/confirmations",
											"host": [
												"{{host}}"
											],
											"path": [
												"suv",
												"{{version}}",
												"vouchers",
												"confirmations"
											]
										},
										"description": "Voucher confirmation advice"
									},
									"response": []
								},
								{
									"name": "Redemption of prior voucher",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "77f36893-f14c-4241-a259-a0f076447f5c",
												"exec": [
													"tests[\"Status code is 202\"] = responseCode.code === 201;",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
												"exec": [
													"function _p8(s) {",
													"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
													"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
													"   }",
													"",
													"function uuid() {",
													"   ",
													"   return _p8() + _p8(true) + _p8(true) + _p8();",
													"}",
													"",
													"var redemptionId = uuid();",
													"postman.setEnvironmentVariable(\"confirmationId\", redemptionId);",
													"",
													"var timestamp = new Date().toISOString();",
													"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{clientInstId}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "password",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{redemptionId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{host}}/suv/{{version}}/redemptions",
											"host": [
												"{{host}}"
											],
											"path": [
												"suv",
												"{{version}}",
												"redemptions"
											]
										},
										"description": "Voucher confirmation advice"
									},
									"response": []
								},
								{
									"name": "Confirmation of prior redemption",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "77f36893-f14c-4241-a259-a0f076447f5c",
												"exec": [
													"tests[\"Status code is 202\"] = responseCode.code === 202;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"Confirmation ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"confirmationId\");",
													"tests[\"Request ID returned\"] = jsonData.requestId === postman.getEnvironmentVariable(\"redemptionId\");",
													"tests[\"Time returned\"] = jsonData.time === postman.getEnvironmentVariable(\"timestamp\");",
													"tests[\"Third party identifiers\"] = jsonData.id !== null;"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
												"exec": [
													"function _p8(s) {",
													"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
													"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
													"   }",
													"",
													"function uuid() {",
													"   ",
													"   return _p8() + _p8(true) + _p8(true) + _p8();",
													"}",
													"",
													"var confirmationId = uuid();",
													"postman.setEnvironmentVariable(\"confirmationId\", confirmationId);",
													"",
													"var timestamp = new Date().toISOString();",
													"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{clientInstId}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "password",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{redemptionId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/suv/{{version}}/redemptions/confirmations",
											"host": [
												"{{host}}"
											],
											"path": [
												"suv",
												"{{version}}",
												"redemptions",
												"confirmations"
											]
										},
										"description": "Voucher confirmation advice"
									},
									"response": []
								},
								{
									"name": "Refund Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "77f36893-f14c-4241-a259-a0f076447f5c",
												"exec": [
													"tests[\"Status code is 201\"] = responseCode.code === 201;",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
												"exec": [
													"function _p8(s) {",
													"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
													"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
													"   }",
													"",
													"function uuid() {",
													"   ",
													"   return _p8() + _p8(true) + _p8(true) + _p8();",
													"}",
													"",
													"var refundId = uuid();",
													"postman.setEnvironmentVariable(\"refundId\", refundId);",
													"",
													"var timestamp = new Date().toISOString();",
													"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{clientInstId}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "password",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{refundId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
										},
										"url": {
											"raw": "{{host}}/suv/{{version}}/refunds",
											"host": [
												"{{host}}"
											],
											"path": [
												"suv",
												"{{version}}",
												"refunds"
											]
										},
										"description": "Voucher confirmation advice"
									},
									"response": []
								},
								{
									"name": "Refund confirmation",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "77f36893-f14c-4241-a259-a0f076447f5c",
												"exec": [
													"tests[\"Status code is 202\"] = responseCode.code === 202;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"Confirmation ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"confirmationId\");",
													"tests[\"Refund ID returned\"] = jsonData.requestId === postman.getEnvironmentVariable(\"refundId\");",
													"tests[\"Time returned\"] = jsonData.time === postman.getEnvironmentVariable(\"timestamp\");",
													"tests[\"Third party identifiers\"] = jsonData.id !== null;"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
												"exec": [
													"function _p8(s) {",
													"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
													"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
													"   }",
													"",
													"function uuid() {",
													"   ",
													"   return _p8() + _p8(true) + _p8(true) + _p8();",
													"}",
													"",
													"var confirmationId = uuid();",
													"postman.setEnvironmentVariable(\"confirmationId\", confirmationId);",
													"",
													"var timestamp = new Date().toISOString();",
													"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{clientInstId}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "password",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{refundId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ]\n}"
										},
										"url": {
											"raw": "{{host}}/suv/{{version}}/refunds/confirmations",
											"host": [
												"{{host}}"
											],
											"path": [
												"suv",
												"{{version}}",
												"refunds",
												"confirmations"
											]
										},
										"description": "Voucher confirmation advice"
									},
									"response": []
								},
								{
									"name": "Reversal of confirmed refund",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "77f36893-f14c-4241-a259-a0f076447f5c",
												"exec": [
													"tests[\"Status code is 400\"] = responseCode.code === 400;",
													"",
													"var jsonData = JSON.parse(responseBody);",
													"tests[\"Error type is REFUND_ALREADY_CONFIRMED\"] = jsonData.errorType === \"REFUND_ALREADY_CONFIRMED\";",
													"tests[\"Original ID returned\"] = jsonData.originalId == postman.getEnvironmentVariable(\"refundId\");",
													"tests[\"Reversal ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"reversalId\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
												"exec": [
													"function _p8(s) {",
													"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
													"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
													"   }",
													"",
													"function uuid() {",
													"   ",
													"   return _p8() + _p8(true) + _p8(true) + _p8();",
													"}",
													"",
													"var reversalId = uuid();",
													"postman.setEnvironmentVariable(\"reversalId\", reversalId);",
													"",
													"var timestamp = new Date().toISOString();",
													"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{clientInstId}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "password",
													"type": "string"
												},
												{
													"key": "saveHelperData",
													"value": true,
													"type": "boolean"
												},
												{
													"key": "showPassword",
													"value": false,
													"type": "boolean"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"id\": \"{{reversalId}}\",\n    \"requestId\": \"{{refundId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"reversalReason\": \"TIMEOUT\"\n}"
										},
										"url": {
											"raw": "{{host}}/suv/{{version}}/refunds/reversals",
											"host": [
												"{{host}}"
											],
											"path": [
												"suv",
												"{{version}}",
												"refunds",
												"reversals"
											]
										},
										"description": "Voucher confirmation advice"
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "8323c59b-2f12-4fd4-afb4-34d2d9bfdab9",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "aac22cb1-1228-49bb-b460-dd1f42c7423c",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Refund Missing field tests",
					"item": [
						{
							"name": "Missing voucher ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ae01840c-eacf-4559-a3c6-b0c16f71d3cc",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"id may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "df6938a2-1de9-43bf-b4d5-1ebecfb30027",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"time\":\"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/refunds",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"refunds"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing time",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f46b99a6-3cd7-4125-a52c-be8f80249b94",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"time may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a153629e-0349-4cc9-a942-707c3aaea316",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/refunds/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"refunds",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8e85bd24-f5e2-4182-884f-f2912bb4372c",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "07e98f24-6f29-4017-81c6-f5a00d5c7411",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/refunds/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"refunds",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.merchant",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "532bacbf-a351-464f-ac8c-f47efa85aae4",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "243250f5-ba10-436d-9bdd-908a848260da",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/refunds/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"refunds",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.merchant.merchantId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e7610ef0-7256-49a7-b82d-47309b10ec19",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant.merchantId may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0d107e75-4d7a-4edc-aa6a-2de2f63284e1",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/refunds/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"refunds",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.merchant.merchantName",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8f26317a-703b-4fe5-960e-2b7cb3f75c6d",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant.merchantName may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ad867204-bfe3-4849-a7f1-df959d6638e3",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\"\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/refunds/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"refunds",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing merchantName.name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7d86cda0-3a18-4b04-9660-57025727f05e",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant.merchantName.name may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0b4d47c9-4e07-460f-a8e9-22ac2a74193f",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/refunds/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"refunds",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing merchantName.city",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "392b1498-4935-46d9-a95d-b565c098cef0",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant.merchantName.city may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ca400dbf-dde1-45f0-bdee-ad2644a34b36",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/refunds/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"refunds",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing merchantName.region",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b163b054-b04d-415c-af1c-141f3108f630",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant.merchantName.region may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e127cd7b-4ca4-41e8-860a-1b295d8c8f35",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/refunds/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"refunds",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing merchantName.country",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5d0b1e64-ec66-4736-a770-63124891da77",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant.merchantName.country may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "485da880-3154-4c21-9149-1aae8bd5e6da",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/refunds/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"refunds",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.merchant.merchantType",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "17fa6f3c-e970-4e08-823f-e18f77c92c11",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant.merchantType may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6a183ddd-a570-4ea2-97ac-33c37fedb552",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/refunds/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"refunds",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.terminalId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a7ca689b-ed5f-4f5e-9eb3-f955eabac2a7",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.terminalId may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3edfa005-9fb6-49af-8eb1-341e1f1dacf7",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/refunds/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"refunds",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.institution",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6551c880-dabe-4712-a088-257845681acf",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.institution may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "c72875f3-56db-4561-b27d-00d530c2e7de",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\"\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/refunds/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"refunds",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.institution.id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ea5d1009-27fb-4205-8de3-445ff376e175",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.institution.id may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3a2c1b48-4da8-49f8-9aa5-1fd6fde94516",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/refunds/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"refunds",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.institution.name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "79164c93-9e6e-45a3-9301-030c7c04bad3",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.institution.name may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "68026678-3096-4e8b-a686-79f01c1775f4",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/refunds/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"refunds",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing client",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f83dcded-18fe-4d00-a5dd-627c41127714",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"client may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a5175f66-c2a8-4fb5-b3f8-1217372f81e9",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/refunds/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"refunds",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing client.id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "247db5a9-3667-45e2-a02e-8217456f7fa7",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"client.id may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "de4aa68c-6e0b-4794-b8d9-1f12462bd10f",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/refunds/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"refunds",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing client.name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3beb2324-d2e7-4659-8d4a-d1223ca66990",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"client.name may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e6e8e2f2-973a-4bd8-8f58-d93d815b3459",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/refunds/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"refunds",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing thirdPartyId.institutionId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3beb2324-d2e7-4659-8d4a-d1223ca66990",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg ===  \"thirdPartyIdentifiers[0].institutionId may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e6e8e2f2-973a-4bd8-8f58-d93d815b3459",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n        \n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/refunds/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"refunds",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing thirdPartyId.transactionIdentifier",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3beb2324-d2e7-4659-8d4a-d1223ca66990",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"thirdPartyIdentifiers[0].transactionIdentifier may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e6e8e2f2-973a-4bd8-8f58-d93d815b3459",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing reversal ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2232ccf9-99c5-411f-8abf-dbfc31a00359",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"id may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "f1bfd6bb-3ac9-4603-9b8f-fd0977d80ad0",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var reversalId = uuid();",
											"postman.setEnvironmentVariable(\"reversalId\", reversalId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"reversalReason\": \"TIMEOUT\"\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions/reversals",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions",
										"reversals"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing request ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ae4b1b48-8aa0-4414-b43c-b8ad1dfba99f",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"requestId may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0cbed0df-a5fd-4760-8ef1-68cb8662c916",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var reversalId = uuid();",
											"postman.setEnvironmentVariable(\"reversalId\", reversalId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{reversalId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"reversalReason\": \"TIMEOUT\"\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions/reversals",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions",
										"reversals"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing reversal time",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "437e9e49-34f2-496a-bd62-cc0c7bae229b",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"time may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "16bebee5-d288-4426-80f8-c7bdce63c1ef",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var reversalId = uuid();",
											"postman.setEnvironmentVariable(\"reversalId\", reversalId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{reversalId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"reversalReason\": \"TIMEOUT\"\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions/reversals",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions",
										"reversals"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing reversal reason",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f1a8531-2b30-4773-9b3b-b0ad1f7afc56",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"reversalReason may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "68e556a2-c3d6-4cad-bb71-c916e291576a",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var reversalId = uuid();",
											"postman.setEnvironmentVariable(\"reversalId\", reversalId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{reversalId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions/reversals",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions",
										"reversals"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing Voucher",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ae01840c-eacf-4559-a3c6-b0c16f71d3cc",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"voucher may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "df6938a2-1de9-43bf-b4d5-1ebecfb30027",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t \"id\": \"{{requestId}}\",\n   \"time\":\"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions"
									]
								}
							},
							"response": []
						}
					],
					"description": "Messages intended to test that the server correctly identifies a missing field in a message to the server.",
					"_postman_isSubFolder": true
				},
				{
					"name": "Refund Requests",
					"item": [
						{
							"name": "Provision request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dd8631d6-bc19-4793-81b0-265fd5aabcf3",
										"exec": [
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"//Update environment variable for redemption",
											"postman.setEnvironmentVariable(\"voucherCode\", jsonData.voucher.code);",
											"postman.setEnvironmentVariable(\"voucherExpiry\", jsonData.voucher.expiryDate);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b6f268de-acbb-48e5-8056-339bc385e153",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
											"",
											"var dateTime = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", dateTime);",
											"postman.setEnvironmentVariable(\"requestTime\", dateTime);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers"
									]
								},
								"description": "Voucher provision request"
							},
							"response": []
						},
						{
							"name": "Confirmation of prior voucher",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77f36893-f14c-4241-a259-a0f076447f5c",
										"exec": [
											"tests[\"Status code is 202\"] = responseCode.code === 202;",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var confirmationId = uuid();",
											"postman.setEnvironmentVariable(\"confirmationId\", confirmationId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"tenders\": [\n    \t{\n    \t\"amount\":{\n    \t\t\"amount\":1000,\n    \t\t\"currency\":710\n    \t},\n    \t\"tenderType\":\"CASH\"\n    \t}]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/confirmations",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										"confirmations"
									]
								},
								"description": "Voucher confirmation advice"
							},
							"response": []
						},
						{
							"name": "Redemption of prior voucher",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77f36893-f14c-4241-a259-a0f076447f5c",
										"exec": [
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var redemptionId = uuid();",
											"postman.setEnvironmentVariable(\"redemptionId\", redemptionId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{redemptionId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions"
									]
								},
								"description": "Voucher confirmation advice"
							},
							"response": []
						},
						{
							"name": "Confirmation of prior redemption",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77f36893-f14c-4241-a259-a0f076447f5c",
										"exec": [
											"tests[\"Status code is 202\"] = responseCode.code === 202;",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var confirmationId = uuid();",
											"postman.setEnvironmentVariable(\"confirmationId\", confirmationId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{redemptionId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions/confirmations",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions",
										"confirmations"
									]
								},
								"description": "Voucher confirmation advice"
							},
							"response": []
						},
						{
							"name": "Refund request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77f36893-f14c-4241-a259-a0f076447f5c",
										"exec": [
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"refund ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"refundId\");",
											"",
											"tests[\"Time returned\"] = jsonData.time === postman.getEnvironmentVariable(\"timestamp\");",
											"",
											"var originator = jsonData.originator;",
											"tests[\"Originator present\"] = originator !== null;",
											"tests[\"Originator Merchant present\"] = originator.merchant !== null;",
											"tests[\"Originator Institution present\"] = originator.institution !== null;",
											"tests[\"Originator terminal echoed\"] = originator.terminalId === postman.getEnvironmentVariable(\"termId\");",
											"",
											"var client = jsonData.client;",
											"tests[\"client institution present\"] = client !== null;",
											"tests[\"client institution ID present\"] = client.id !== null;",
											"tests[\"client institution name present\"] = client.name !== null;",
											"",
											"tests[\"Voucher Code returned\"] = jsonData.voucher !== null;",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var refundId = uuid();",
											"postman.setEnvironmentVariable(\"refundId\", refundId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{refundId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/refunds",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"refunds"
									]
								},
								"description": "Voucher confirmation advice"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Refund Reversals",
					"item": [
						{
							"name": "Provision request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dd8631d6-bc19-4793-81b0-265fd5aabcf3",
										"exec": [
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"//Update environment variable for redemption",
											"postman.setEnvironmentVariable(\"voucherCode\", jsonData.voucher.code);",
											"postman.setEnvironmentVariable(\"voucherExpiry\", jsonData.voucher.expiryDate);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b6f268de-acbb-48e5-8056-339bc385e153",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
											"",
											"var dateTime = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", dateTime);",
											"postman.setEnvironmentVariable(\"requestTime\", dateTime);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers"
									]
								},
								"description": "Voucher provision request"
							},
							"response": []
						},
						{
							"name": "Confirmation of prior voucher",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77f36893-f14c-4241-a259-a0f076447f5c",
										"exec": [
											"tests[\"Status code is 202\"] = responseCode.code === 202;",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var confirmationId = uuid();",
											"postman.setEnvironmentVariable(\"confirmationId\", confirmationId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"tenders\": [\n    \t{\n    \t\"amount\":{\n    \t\t\"amount\":1000,\n    \t\t\"currency\":710\n    \t},\n    \t\"tenderType\":\"CASH\"\n    \t}]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/confirmations",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										"confirmations"
									]
								},
								"description": "Voucher confirmation advice"
							},
							"response": []
						},
						{
							"name": "Redemption of prior voucher",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77f36893-f14c-4241-a259-a0f076447f5c",
										"exec": [
											"tests[\"Status code is 202\"] = responseCode.code === 201;",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var redemptionId = uuid();",
											"postman.setEnvironmentVariable(\"confirmationId\", redemptionId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{redemptionId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions"
									]
								},
								"description": "Voucher confirmation advice"
							},
							"response": []
						},
						{
							"name": "Confirmation of prior redemption",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77f36893-f14c-4241-a259-a0f076447f5c",
										"exec": [
											"tests[\"Status code is 202\"] = responseCode.code === 202;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Confirmation ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"confirmationId\");",
											"tests[\"Request ID returned\"] = jsonData.requestId === postman.getEnvironmentVariable(\"redemptionId\");",
											"tests[\"Time returned\"] = jsonData.time === postman.getEnvironmentVariable(\"timestamp\");",
											"tests[\"Third party identifiers\"] = jsonData.id !== null;"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var confirmationId = uuid();",
											"postman.setEnvironmentVariable(\"confirmationId\", confirmationId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{redemptionId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/redemptions/confirmations",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"redemptions",
										"confirmations"
									]
								},
								"description": "Voucher confirmation advice"
							},
							"response": []
						},
						{
							"name": "Refund request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77f36893-f14c-4241-a259-a0f076447f5c",
										"exec": [
											"tests[\"Status code is 202\"] = responseCode.code === 201;",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var refundId = uuid();",
											"postman.setEnvironmentVariable(\"refundId\", refundId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{refundId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ],\n    \"voucher\": {\n        \"code\": \"{{voucherCode}}\",\n        \"expiryDate\": \"{{voucherExpiry}}\",\n        \"redeemInstructions\": [\n            \"To redeem your voucher\",\n            \"enter the USSD code below:\",\n            \"*999*<pin>#\"\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/refunds",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"refunds"
									]
								},
								"description": "Voucher confirmation advice"
							},
							"response": []
						},
						{
							"name": "Reversal of prior refund request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77f36893-f14c-4241-a259-a0f076447f5c",
										"exec": [
											"tests[\"Status code is 202\"] = responseCode.code === 202;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Reversal ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"reversalId\");",
											"tests[\"Refund ID returned\"] = jsonData.requestId === postman.getEnvironmentVariable(\"refundId\");",
											"tests[\"Time returned\"] = jsonData.time === postman.getEnvironmentVariable(\"timestamp\");",
											"tests[\"Third party identifiers\"] = jsonData.id !== null;",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "319b0a01-d065-4d3a-93b4-4e4449be8cf6",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var reversalId = uuid();",
											"postman.setEnvironmentVariable(\"reversalId\", reversalId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{reversalId}}\",\n    \"requestId\": \"{{refundId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"reversalReason\": \"TIMEOUT\"\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/refunds/reversals",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"refunds",
										"reversals"
									]
								},
								"description": "Voucher confirmation advice"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			]
		}
	]
}