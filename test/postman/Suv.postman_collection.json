{
	"info": {
		"_postman_id": "973feaa9-668e-4931-8475-7f75fd54df12",
		"name": "SUV",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Voucher Model",
			"item": [
				{
					"name": "Voucher Missing field tests",
					"item": [
						{
							"name": "Missing voucher ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ae01840c-eacf-4559-a3c6-b0c16f71d3cc",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"id may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "df6938a2-1de9-43bf-b4d5-1ebecfb30027",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing time",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f46b99a6-3cd7-4125-a52c-be8f80249b94",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"time may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a153629e-0349-4cc9-a942-707c3aaea316",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8e85bd24-f5e2-4182-884f-f2912bb4372c",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "07e98f24-6f29-4017-81c6-f5a00d5c7411",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.merchant",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "532bacbf-a351-464f-ac8c-f47efa85aae4",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "243250f5-ba10-436d-9bdd-908a848260da",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.merchant.merchantId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e7610ef0-7256-49a7-b82d-47309b10ec19",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant.merchantId may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0d107e75-4d7a-4edc-aa6a-2de2f63284e1",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.merchant.merchantName",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8f26317a-703b-4fe5-960e-2b7cb3f75c6d",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant.merchantName may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ad867204-bfe3-4849-a7f1-df959d6638e3",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\"\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing merchantName.name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7d86cda0-3a18-4b04-9660-57025727f05e",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant.merchantName.name may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0b4d47c9-4e07-460f-a8e9-22ac2a74193f",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing merchantName.city",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "392b1498-4935-46d9-a95d-b565c098cef0",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant.merchantName.city may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ca400dbf-dde1-45f0-bdee-ad2644a34b36",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing merchantName.region",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b163b054-b04d-415c-af1c-141f3108f630",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant.merchantName.region may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e127cd7b-4ca4-41e8-860a-1b295d8c8f35",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing merchantName.country",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5d0b1e64-ec66-4736-a770-63124891da77",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant.merchantName.country may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "485da880-3154-4c21-9149-1aae8bd5e6da",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.merchant.merchantType",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "17fa6f3c-e970-4e08-823f-e18f77c92c11",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.merchant.merchantType may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6a183ddd-a570-4ea2-97ac-33c37fedb552",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.terminalId",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a7ca689b-ed5f-4f5e-9eb3-f955eabac2a7",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.terminalId may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3edfa005-9fb6-49af-8eb1-341e1f1dacf7",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.institution",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6551c880-dabe-4712-a088-257845681acf",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.institution may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "c72875f3-56db-4561-b27d-00d530c2e7de",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\"\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.institution.id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ea5d1009-27fb-4205-8de3-445ff376e175",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.institution.id may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3a2c1b48-4da8-49f8-9aa5-1fd6fde94516",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing originator.institution.name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "79164c93-9e6e-45a3-9301-030c7c04bad3",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"originator.institution.name may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "68026678-3096-4e8b-a686-79f01c1775f4",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing client",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f83dcded-18fe-4d00-a5dd-627c41127714",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"client may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "a5175f66-c2a8-4fb5-b3f8-1217372f81e9",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing client.id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "247db5a9-3667-45e2-a02e-8217456f7fa7",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"client.id may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "de4aa68c-6e0b-4794-b8d9-1f12462bd10f",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing client.name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3beb2324-d2e7-4659-8d4a-d1223ca66990",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"client.name may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e6e8e2f2-973a-4bd8-8f58-d93d815b3459",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"merchantRef\", (\"merch\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"senderRef\", (\"send\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"processorRef\", (\"proc\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"vendorRef\", (\"vendor\"+uuidLast4).toUpperCase());",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing reversal ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2232ccf9-99c5-411f-8abf-dbfc31a00359",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"id may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "f1bfd6bb-3ac9-4603-9b8f-fd0977d80ad0",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var reversalId = uuid();",
											"postman.setEnvironmentVariable(\"reversalId\", reversalId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"reversalReason\": \"TIMEOUT\",\n    \"voucherRequest\" : {\n        \"id\": \"{{requestId}}\",\n        \"time\": \"{{requestTime}}\",\n        \"originator\": {\n            \"merchant\": {\n                \"merchantType\": \"{{merchantType}}\",\n                \"merchantId\": \"{{merchantId}}\",\n                \"merchantName\": {\n                    \"name\": \"{{merchantName}}\",\n                    \"city\": \"{{merchantCity}}\",\n                    \"region\": \"{{merchantRegion}}\",\n                    \"country\": \"{{merchantCountry}}\"\n                }\n            },\n            \"terminalId\": \"{{termId}}\",\n            \"institution\": {\n                \"id\": \"{{originatorInstId}}\",\n                \"name\": \"{{originatorInstName}}\"\n            }\n        },\n        \"client\": {\n            \"id\": \"{{clientInstId}}\",\n            \"name\": \"{{clientInstName}}\"\n        },\n        \"receiver\": {\n            \"id\": \"{{receiverInstId}}\",\n            \"name\": \"{{receiverInstName}}\"\n        },\n        \"thirdPartyIdentifiers\" : [\n            {\n                \"institutionId\": \"{{originatorInstId}}\",\n                \"transactionIdentifier\": \"{{originatorRef}}\"\n            },\n            {\n                \"institutionId\": \"{{clientInstId}}\",\n                \"transactionIdentifier\": \"{{clientRef}}\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/reversals",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										"reversals"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing request ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ae4b1b48-8aa0-4414-b43c-b8ad1dfba99f",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"requestId may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0cbed0df-a5fd-4760-8ef1-68cb8662c916",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var reversalId = uuid();",
											"postman.setEnvironmentVariable(\"reversalId\", reversalId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{reversalId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"reversalReason\": \"TIMEOUT\",\n    \"voucherRequest\" : {\n        \"id\": \"{{requestId}}\",\n        \"time\": \"{{requestTime}}\",\n        \"originator\": {\n            \"merchant\": {\n                \"merchantType\": \"{{merchantType}}\",\n                \"merchantId\": \"{{merchantId}}\",\n                \"merchantName\": {\n                    \"name\": \"{{merchantName}}\",\n                    \"city\": \"{{merchantCity}}\",\n                    \"region\": \"{{merchantRegion}}\",\n                    \"country\": \"{{merchantCountry}}\"\n                }\n            },\n            \"terminalId\": \"{{termId}}\",\n            \"institution\": {\n                \"id\": \"{{originatorInstId}}\",\n                \"name\": \"{{originatorInstName}}\"\n            }\n        },\n        \"client\": {\n            \"id\": \"{{clientInstId}}\",\n            \"name\": \"{{clientInstName}}\"\n        },\n        \"receiver\": {\n            \"id\": \"{{receiverInstId}}\",\n            \"name\": \"{{receiverInstName}}\"\n        },\n        \"thirdPartyIdentifiers\" : [\n            {\n                \"institutionId\": \"{{originatorInstId}}\",\n                \"transactionIdentifier\": \"{{originatorRef}}\"\n            },\n            {\n                \"institutionId\": \"{{clientInstId}}\",\n                \"transactionIdentifier\": \"{{clientRef}}\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}/reversals/{{reversalId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}",
										"reversals",
										"{{reversalId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing reversal time",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "437e9e49-34f2-496a-bd62-cc0c7bae229b",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"time may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "16bebee5-d288-4426-80f8-c7bdce63c1ef",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var reversalId = uuid();",
											"postman.setEnvironmentVariable(\"reversalId\", reversalId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{reversalId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"reversalReason\": \"TIMEOUT\",\n    \"voucherRequest\" : {\n        \"id\": \"{{requestId}}\",\n        \"time\": \"{{requestTime}}\",\n        \"originator\": {\n            \"merchant\": {\n                \"merchantType\": \"{{merchantType}}\",\n                \"merchantId\": \"{{merchantId}}\",\n                \"merchantName\": {\n                    \"name\": \"{{merchantName}}\",\n                    \"city\": \"{{merchantCity}}\",\n                    \"region\": \"{{merchantRegion}}\",\n                    \"country\": \"{{merchantCountry}}\"\n                }\n            },\n            \"terminalId\": \"{{termId}}\",\n            \"institution\": {\n                \"id\": \"{{originatorInstId}}\",\n                \"name\": \"{{originatorInstName}}\"\n            }\n        },\n        \"client\": {\n            \"id\": \"{{clientInstId}}\",\n            \"name\": \"{{clientInstName}}\"\n        },\n        \"receiver\": {\n            \"id\": \"{{receiverInstId}}\",\n            \"name\": \"{{receiverInstName}}\"\n        },\n        \"thirdPartyIdentifiers\" : [\n            {\n                \"institutionId\": \"{{originatorInstId}}\",\n                \"transactionIdentifier\": \"{{originatorRef}}\"\n            },\n            {\n                \"institutionId\": \"{{clientInstId}}\",\n                \"transactionIdentifier\": \"{{clientRef}}\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}/reversals/{{reversalId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}",
										"reversals",
										"{{reversalId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing reversal reason",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0f1a8531-2b30-4773-9b3b-b0ad1f7afc56",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"reversalReason may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "68e556a2-c3d6-4cad-bb71-c916e291576a",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var reversalId = uuid();",
											"postman.setEnvironmentVariable(\"reversalId\", reversalId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic dGVzdENsaWVudDpwYXNzd29yZA=="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{reversalId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"voucherRequest\" : {\n        \"id\": \"{{requestId}}\",\n        \"time\": \"{{requestTime}}\",\n        \"originator\": {\n            \"merchant\": {\n                \"merchantType\": \"{{merchantType}}\",\n                \"merchantId\": \"{{merchantId}}\",\n                \"merchantName\": {\n                    \"name\": \"{{merchantName}}\",\n                    \"city\": \"{{merchantCity}}\",\n                    \"region\": \"{{merchantRegion}}\",\n                    \"country\": \"{{merchantCountry}}\"\n                }\n            },\n            \"terminalId\": \"{{termId}}\",\n            \"institution\": {\n                \"id\": \"{{originatorInstId}}\",\n                \"name\": \"{{originatorInstName}}\"\n            }\n        },\n        \"client\": {\n            \"id\": \"{{clientInstId}}\",\n            \"name\": \"{{clientInstName}}\"\n        },\n        \"receiver\": {\n            \"id\": \"{{receiverInstId}}\",\n            \"name\": \"{{receiverInstName}}\"\n        },\n        \"thirdPartyIdentifiers\" : [\n            {\n                \"institutionId\": \"{{originatorInstId}}\",\n                \"transactionIdentifier\": \"{{originatorRef}}\"\n            },\n            {\n                \"institutionId\": \"{{clientInstId}}\",\n                \"transactionIdentifier\": \"{{clientRef}}\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}/reversals/{{reversalId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}",
										"reversals",
										"{{reversalId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing confirmation ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1c67e74e-08f7-4d80-a5dd-84db3dd7eecb",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"id may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e9e45d93-82bd-4659-95b7-11b064d3af3b",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var voidId = uuid();",
											"postman.setEnvironmentVariable(\"confirmationId\", voidId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"voucher\": {\n        \"serialNumber\": \"{{serialNum}}\",\n        \"batchNumber\": \"{{batchNum}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}/confirmations/{{confirmationId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}",
										"confirmations",
										"{{confirmationId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing confirmation request ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "15606a94-81b1-45d9-abaa-a8881af5d05a",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"requestId may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b9d006af-ca0c-4e83-82b7-b77bddb8a7d8",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var voidId = uuid();",
											"postman.setEnvironmentVariable(\"confirmationId\", voidId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"voucher\": {\n        \"serialNumber\": \"{{serialNum}}\",\n        \"batchNumber\": \"{{batchNum}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}/confirmations/{{confirmationId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}",
										"confirmations",
										"{{confirmationId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing confirmation time",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f97abe41-d957-4f92-a505-d64076f64d34",
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"time may not be null\";"
										]
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "f8dac0d6-887a-4011-9878-24c479bae80b",
										"type": "text/javascript",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var voidId = uuid();",
											"postman.setEnvironmentVariable(\"confirmationId\", voidId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"voucher\": {\n        \"serialNumber\": \"{{serialNum}}\",\n        \"batchNumber\": \"{{batchNum}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}/confirmations/{{confirmationId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}",
										"confirmations",
										"{{confirmationId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Missing confirmation voucher serial number",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f1173088-5e39-4ed6-b159-d34e6087b285",
										"exec": [
											"tests[\"Status code is 400\"] = responseCode.code === 400;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Error type is FORMAT_ERROR\"] = jsonData.errorType === \"FORMAT_ERROR\";",
											"tests[\"Error message is not null\"] = jsonData.errorMessage !== null;",
											"var formatErrors = jsonData.detailMessage.formatErrors;",
											"tests[\"Correct Error message\"] = formatErrors[0].msg === \"voucher.serialNumber may not be null\";"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "479d8106-7b58-472a-8d3d-e749b2e745ea",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var voidId = uuid();",
											"postman.setEnvironmentVariable(\"confirmationId\", voidId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{confirmationId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"voucher\": {\n        \"batchNumber\": \"{{batchNum}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{host}}/airtime/{{version}}/vouchers/{{requestId}}/confirmations/{{confirmationId}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"airtime",
										"{{version}}",
										"vouchers",
										"{{requestId}}",
										"confirmations",
										"{{confirmationId}}"
									]
								}
							},
							"response": []
						}
					],
					"description": "Messages intended to test that the server correctly identifies a missing field in a message to the server.",
					"_postman_isSubFolder": true
				},
				{
					"name": "Voucher Provisions",
					"item": [
						{
							"name": "Minimalist Provision request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d6075876-1928-4c82-bb48-1eeadf8635ae",
										"exec": [
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Voucher ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"requestId\");",
											"",
											"tests[\"TimeStamp format correct\"] = new Date(jsonData.time);",
											"",
											"var voucher = jsonData.voucher;",
											"tests[\"Voucher present\"] = voucher !== null;",
											"tests[\"Voucher serial number present\"] = voucher.serialNumber !== null;",
											"tests[\"Voucher pin present\"] = voucher.pin !== null;",
											"tests[\"Voucher request time present\"] = jsonData.requestTime !== null;",
											"",
											"var originator = jsonData.originator;",
											"tests[\"Originator present\"] = originator !== null;",
											"tests[\"Originator Merchant present\"] = originator.merchant !== null;",
											"tests[\"Originator Institution present\"] = originator.institution !== null;",
											"tests[\"Originator terminal echoed\"] = originator.terminalId === postman.getEnvironmentVariable(\"termId\");",
											"",
											"var merchant = originator.merchant;",
											"tests[\"Merchant ID echoed\"] = merchant.merchantId === postman.getEnvironmentVariable(\"merchantId\");",
											"tests[\"Merchant type echoed\"] = merchant.merchantType === postman.getEnvironmentVariable(\"merchantType\");",
											"tests[\"Merchant name present\"] = merchant.merchantName !== null;",
											"",
											"var merchantName = merchant.merchantName;",
											"tests[\"Merchant Name echoed\"] = merchantName.name === postman.getEnvironmentVariable(\"merchantName\");",
											"tests[\"Merchant City echoed\"] = merchantName.city === postman.getEnvironmentVariable(\"merchantCity\");",
											"tests[\"Merchant Region echoed\"] = merchantName.region === postman.getEnvironmentVariable(\"merchantRegion\");",
											"tests[\"Merchant Country echoed\"] = merchantName.country === postman.getEnvironmentVariable(\"merchantCountry\");",
											"",
											"var originatorInst = originator.institution;",
											"tests[\"Originator institution present\"] = originatorInst !== null;",
											"tests[\"Originator institution ID echoed\"] = originatorInst.id === postman.getEnvironmentVariable(\"originatorInstId\");",
											"tests[\"Originator institution name echoed\"] = originatorInst.name === postman.getEnvironmentVariable(\"originatorInstName\");",
											"",
											"var settlementEntity = jsonData.settlementEntity;",
											"tests[\"Settlement Entity institution present\"] = settlementEntity !== null;",
											"tests[\"Settlement Entity institution ID present\"] = settlementEntity.id !== null;",
											"tests[\"Settlement Entity institution name present\"] = settlementEntity.name !== null;",
											"",
											"var receiver = jsonData.receiver;",
											"tests[\"Receiver institution present\"] = receiver !== null;",
											"tests[\"Receiver institution ID present\"] = receiver.id !== null;",
											"tests[\"Receiver institution name present\"] = receiver.name !== null;",
											"",
											"var thirdPartyIndentifiers = jsonData.thirdPartyIndentifiers;",
											"tests[\"Third Party Indentifiers present\"] = thirdPartyIndentifiers !== null;"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e5cb42d2-9385-49de-9de8-67a90cb25838",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"// References are all refType+last 4 chars in UUID",
											"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
											"",
											"var dateTime = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", dateTime);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers"
									]
								},
								"description": "Voucher provision request"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Voucher Reversals",
					"item": [
						{
							"name": "Reversal of prior provision copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f3d38f54-1570-41ff-8ed3-99751b64637e",
										"exec": [
											"tests[\"Status code is 202\"] = responseCode.code === 202;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"tests[\"Reversal ID returned\"] = jsonData.id === postman.getEnvironmentVariable(\"reversalId\");",
											"tests[\"Request ID returned\"] = jsonData.requestId === postman.getEnvironmentVariable(\"requestId\");",
											"tests[\"Time returned\"] = jsonData.time === postman.getEnvironmentVariable(\"timestamp\");",
											"tests[\"Third party identifiers\"] = jsonData.id !== null;"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "f29e7ad4-1053-462e-923a-8e334b44990c",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var reversalId = uuid();",
											"postman.setEnvironmentVariable(\"reversalId\", reversalId);",
											"",
											"var timestamp = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", timestamp);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{reversalId}}\",\n    \"requestId\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId3}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef3}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId4}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef4}}\"\n        }\n    ],\n    \"reversalReason\": \"TIMEOUT\"\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers/reversals",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers",
										"reversals"
									]
								},
								"description": "Voucher reversal advice"
							},
							"response": []
						},
						{
							"name": "Provision request",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dd8631d6-bc19-4793-81b0-265fd5aabcf3",
										"exec": [
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"",
											"var jsonData = JSON.parse(responseBody);",
											"",
											"var thirdPartyIds = jsonData.thirdPartyIdentifiers",
											"postman.setEnvironmentVariable(\"thirdPartyId1\", thirdPartyIds[0].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef1\", thirdPartyIds[0].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId2\", thirdPartyIds[1].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef2\", thirdPartyIds[1].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId3\", thirdPartyIds[2].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef3\", thirdPartyIds[2].transactionIdentifier);",
											"",
											"postman.setEnvironmentVariable(\"thirdPartyId4\", thirdPartyIds[3].institutionId);",
											"postman.setEnvironmentVariable(\"thirdPartyTranRef4\", thirdPartyIds[3].transactionIdentifier);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b6f268de-acbb-48e5-8056-339bc385e153",
										"exec": [
											"function _p8(s) {",
											"       var p = (Math.random().toString(16)+\"000000000\").substr(2,8);",
											"       return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;",
											"   }",
											"",
											"function uuid() {",
											"   ",
											"   return _p8() + _p8(true) + _p8(true) + _p8();",
											"}",
											"",
											"var requestId = uuid();",
											"postman.setEnvironmentVariable(\"requestId\", requestId);",
											"",
											"var uuidLast4 = requestId.substr(requestId.length-4, 4);",
											"",
											"postman.setEnvironmentVariable(\"originatorRef\", (\"orig\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"clientRef\", (\"clnt\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"settlementEntityRef\", (\"seEn\"+uuidLast4).toUpperCase());",
											"postman.setEnvironmentVariable(\"receiverRef\", (\"receiver\"+uuidLast4).toUpperCase());",
											"",
											"var dateTime = new Date().toISOString();",
											"postman.setEnvironmentVariable(\"timestamp\", dateTime);",
											"postman.setEnvironmentVariable(\"requestTime\", dateTime);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "{{clientInstId}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "password",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic MjIyMjIyMjI6cGFzc3dvcmQ="
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"{{requestId}}\",\n    \"time\": \"{{timestamp}}\",\n    \"originator\": {\n        \"merchant\": {\n            \"merchantType\": \"{{merchantType}}\",\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"name\": \"{{merchantName}}\",\n                \"city\": \"{{merchantCity}}\",\n                \"region\": \"{{merchantRegion}}\",\n                \"country\": \"{{merchantCountry}}\"\n            }\n        },\n        \"terminalId\": \"{{termId}}\",\n        \"institution\": {\n            \"id\": \"{{originatorInstId}}\",\n            \"name\": \"{{originatorInstName}}\"\n        }\n    },\n    \"client\": {\n        \"id\": \"{{clientInstId}}\",\n        \"name\": \"{{clientInstName}}\"\n    },\n    \"receiver\": {\n        \"id\": \"{{receiverInstId}}\",\n        \"name\": \"{{receiverInstName}}\"\n    },\n    \"thirdPartyIdentifiers\" : [\n        {\n            \"institutionId\": \"{{originatorInstId}}\",\n            \"transactionIdentifier\": \"{{originatorRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientInstId}}\",\n            \"transactionIdentifier\": \"{{clientRef}}\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{host}}/suv/{{version}}/vouchers",
									"host": [
										"{{host}}"
									],
									"path": [
										"suv",
										"{{version}}",
										"vouchers"
									]
								},
								"description": "Voucher provision request"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Voucher Confirmations",
					"item": [],
					"_postman_isSubFolder": true
				}
			]
		},
		{
			"name": "Redemptions Model",
			"item": []
		},
		{
			"name": "Refunds Model",
			"item": []
		}
	]
}